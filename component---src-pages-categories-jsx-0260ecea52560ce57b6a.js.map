{"version":3,"sources":["webpack:///./src/pages/categories.jsx","webpack:///./config/index.js","webpack:///./src/components/Subline.jsx","webpack:///./src/components/Article.jsx","webpack:///./src/components/Button.jsx","webpack:///./src/components/Header.jsx","webpack:///./src/components/SEO.jsx","webpack:///./config/theme.js","webpack:///./src/hooks/useBuildTime.jsx","webpack:///./src/components/Layout.jsx","webpack:///./src/components/PrevNext.jsx","webpack:///./src/components/SectionTitle.jsx","webpack:///./src/components/Wrapper.jsx","webpack:///./src/components/index.jsx"],"names":["Content","styled","div","props","theme","colors","article","breakpoints","tablet","phone","Title","h5","Category","group","data","allMdx","title","config","siteTitle","to","map","category","key","fieldValue","kebabCase","totalCount","postQuery","module","exports","pathPrefix","siteTitleAlt","siteTitleManifest","siteUrl","siteLanguage","siteHeadline","siteBanner","favicon","siteDescription","author","siteLogo","userTwitter","ogSiteName","ogLanguage","googleAnalyticsID","themeColor","backgroundColor","Subline","fontSize","small","grey","ultraLight","sectionTitle","Post","h2","primaryLight","Initiale","span","Excerpt","p","Article","date","excerpt","slug","timeToRead","categories","firstChar","charAt","cat","i","Fragment","Button","button","primary","big","white","transitions","normal","Wrapper","header","darken","lighten","maxWidth","Header","children","SEO","description","postNode","postPath","buildTime","realPrefix","homeURL","URL","image","frontmatter","schemaOrgWebPage","url","headline","inLanguage","mainEntityOfPage","name","copyrightHolder","copyrightYear","creator","publisher","datePublished","dateModified","itemListElement","item","position","schemaArticle","parent","birthtime","logo","mtime","push","breadcrumb","lang","content","property","siteFBAppID","type","JSON","stringify","defaultProps","bg","dark","default","light","link","fontFamily","serif","sansSerif","baseFontSize","useBuildTime","site","GlobalStyle","createGlobalStyle","color","Footer","footer","Layout","customSEO","href","Prev","Next","PrevNext","next","prev","fields","SectionTitle"],"mappings":"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","file":"component---src-pages-categories-jsx-0260ecea52560ce57b6a.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { Link, graphql } from 'gatsby'\r\nimport styled from 'styled-components'\r\nimport kebabCase from 'lodash/kebabCase'\r\n\r\nimport { Layout, Wrapper, Header, SectionTitle } from '../components'\r\nimport config from '../../config'\r\n\r\nconst Content = styled.div`\r\n  grid-column: 2;\r\n  box-shadow: 0 4px 120px rgba(0, 0, 0, 0.1);\r\n  padding: 2rem 4rem;\r\n  background-color: ${props => props.theme.colors.article};\r\n  z-index: 9000;\r\n  margin-top: -3rem;\r\n  @media (max-width: ${props => props.theme.breakpoints.tablet}) {\r\n    padding: 3rem 3rem;\r\n  }\r\n  @media (max-width: ${props => props.theme.breakpoints.phone}) {\r\n    padding: 2rem 1.5rem;\r\n  }\r\n`\r\n\r\nconst Title = styled.h5`\r\n  position: relative;\r\n  text-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);\r\n  margin-bottom: 0.75rem;\r\n`\r\n\r\nconst Category = ({\r\n  data: {\r\n    allMdx: { group },\r\n  },\r\n}) => (\r\n  <Layout>\r\n    <Wrapper>\r\n      <Helmet title={`Categories | ${config.siteTitle}`} />\r\n      <Header>\r\n          <Link to=\"/\">\r\n              {config.siteTitle}\r\n          </Link>\r\n      </Header>\r\n      <Content>\r\n        <SectionTitle>Categories</SectionTitle>\r\n        {group.map(category => (\r\n          <Title key={category.fieldValue}>\r\n            <Link to={`/categories/${kebabCase(category.fieldValue)}`}>{category.fieldValue}</Link> (\r\n            {category.totalCount})\r\n          </Title>\r\n        ))}\r\n      </Content>\r\n    </Wrapper>\r\n  </Layout>\r\n)\r\n\r\nexport default Category\r\n\r\nCategory.propTypes = {\r\n  data: PropTypes.shape({\r\n    allMdx: PropTypes.shape({\r\n      group: PropTypes.array.isRequired,\r\n    }),\r\n  }).isRequired,\r\n}\r\n\r\nexport const postQuery = graphql`\r\n  query CategoriesPage {\r\n    allMdx {\r\n      group(field: frontmatter___categories) {\r\n        fieldValue\r\n        totalCount\r\n      }\r\n    }\r\n  }\r\n`\r\n","module.exports = {\r\n  pathPrefix: '/', // Prefix for all links. If you deploy your site to example.com/portfolio your pathPrefix should be \"portfolio\"\r\n\r\n  siteTitle: '| Mike Polinowski | | DevNotes |', // Navigation and Site Title\r\n  siteTitleAlt: 'Mike Polinowski', // Alternative Site title for SEO\r\n  siteTitleManifest: '::Mike::Polinowski::',\r\n  siteUrl: 'https://mpolinowski.github.io/', // Domain of your site. No trailing slash!\r\n  siteLanguage: 'en', // Language Tag on <html> element\r\n  siteHeadline: 'Mike Polinowski\\'s Developer Notebook', // Headline for schema.org JSONLD\r\n  siteBanner: '/social/banner.jpg', // Your image for og:image tag. You can find it in the /static folder\r\n  favicon: 'src/favicon.png', // Your image for favicons. You can find it in the /src folder\r\n  siteDescription: 'A Developer Notebook and Personal Technology Playground build with React, Gatsby and MDX', // Your site description\r\n  author: 'Mike Polinowski', // Author for schemaORGJSONLD\r\n  siteLogo: '/social/logo.png', // Image for schemaORGJSONLD\r\n\r\n  // siteFBAppID: '123456789', // Facebook App ID - Optional\r\n  userTwitter: '@minimal', // Twitter Username - Optional\r\n  ogSiteName: 'minimal', // Facebook Site Name - Optional\r\n  ogLanguage: 'en_US', // Facebook Language\r\n  googleAnalyticsID: 'UA-76200392-4',\r\n\r\n  // Manifest and Progress color\r\n  // See: https://developers.google.com/web/fundamentals/web-app-manifest/\r\n  themeColor: '#25ad71',\r\n  backgroundColor: '#2b2e3c',\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst Subline = styled.div`\r\n  font-size: ${props => props.theme.fontSize.small};\r\n  color: ${props => props.theme.colors.grey.ultraLight};\r\n  ${props => props.sectionTitle && 'margin-top: -3rem'};\r\n  ${props => props.sectionTitle && 'margin-bottom: 4rem'};\r\n  ${props => props.sectionTitle && 'text-align: center'};\r\n`\r\n\r\nexport default Subline\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'gatsby'\r\nimport kebabCase from 'lodash/kebabCase'\r\n\r\nimport Subline from './Subline'\r\n\r\nconst Post = styled.article`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 3.5rem;\r\n  margin-bottom: 3.5rem;\r\n\r\n  @media (max-width: ${props => props.theme.breakpoints.phone}) {\r\n    margin-top: 2rem;\r\n    margin-bottom: 2rem;\r\n  }\r\n`\r\n\r\nconst Title = styled.h2`\r\n  position: relative;\r\n  text-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);\r\n  margin-bottom: 0.75rem;\r\n  a {\r\n    color: ${props => props.theme.colors.grey.ultraLight};\r\n    &:hover {\r\n      color: ${props => props.theme.colors.primaryLight};\r\n    }\r\n  }\r\n`\r\n\r\nconst Initiale = styled.span`\r\n  position: absolute;\r\n  font-size: 7rem;\r\n  transform: translate(-50%, -50%);\r\n  opacity: 0.08;\r\n  user-select: none;\r\n  z-index: -1;\r\n`\r\n\r\nconst Excerpt = styled.p`\r\n  grid-column: -1 / 1;\r\n  margin-top: 1rem;\r\n  margin-bottom: 1rem;\r\n`\r\n\r\nconst Article = ({ title, date, excerpt, slug, timeToRead, categories }) => {\r\n  const firstChar = title.charAt(0)\r\n\r\n  return (\r\n    <Post>\r\n      <Title>\r\n        <Initiale>{firstChar}</Initiale>\r\n        <Link to={slug}>{title}</Link>\r\n      </Title>\r\n      <Subline>\r\n        {date} &mdash; {timeToRead} Min Read &mdash; Category{'    '}\r\n        {categories.map((cat, i) => (\r\n          <React.Fragment key={cat}>\r\n            {!!i && ', '}\r\n            <Link to={`/categories/${kebabCase(cat)}`}>{cat}</Link>\r\n          </React.Fragment>\r\n        ))}\r\n      </Subline>\r\n      <Excerpt>{excerpt}</Excerpt>\r\n    </Post>\r\n  )\r\n}\r\n\r\nexport default Article\r\n\r\nArticle.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  excerpt: PropTypes.string.isRequired,\r\n  slug: PropTypes.string.isRequired,\r\n  timeToRead: PropTypes.number.isRequired,\r\n  categories: PropTypes.array.isRequired,\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst Button = styled.button`\r\n  background: ${props => props.theme.colors.primary};\r\n  border: none;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  border-radius: ${props => (props.big ? '.2rem' : '1rem')};\r\n  font-size: ${props => (props.big ? '1.2rem' : '1rem')};\r\n  color: ${props => props.theme.colors.white};\r\n  padding: ${props => (props.big ? '0.5rem 1.75rem' : '0.35rem 1.65rem')};\r\n  transition: all ${props => props.theme.transitions.normal};\r\n  box-shadow: 0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08);\r\n  &:hover {\r\n    background: ${props => props.theme.colors.primaryLight};\r\n    cursor: pointer;\r\n    transform: translateY(-2px);\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { darken, lighten } from 'polished'\r\n\r\nconst Wrapper = styled.header`\r\n  background: linear-gradient(\r\n    45deg,\r\n    ${props => darken(0.1, props.theme.colors.primary)},\r\n    ${props => lighten(0.1, props.theme.colors.primary)}\r\n  );\r\n  grid-column: 1 / -1;\r\n  margin-left: -1rem;\r\n  margin-right: -1rem;\r\n    @media (max-width: ${props => props.theme.breakpoints.tablet}) {\r\n      padding: 1rem 2rem 4rem 2rem;\r\n      }\r\n  padding: 1rem 2rem 4.5rem 2rem;\r\n  box-shadow: inset 0px -10px 30px 0px rgba(0, 0, 0, 0.1);\r\n`\r\n\r\nconst Content = styled.div`\r\n  max-width: ${props => props.theme.maxWidth};\r\n  margin: 0 auto;\r\n  font-size: 1.3rem;\r\n  line-height: 1.58;\r\n  font-weight: bold;\r\n  font-family: 'Bitter',-apple-system,BlinkMacSystemFont,'Segoe UI','Roboto','Helvetica','Arial',serif;\r\n  @media (max-width: ${props => props.theme.breakpoints.phone}) {\r\n    font-size: 1rem;\r\n    }\r\n\r\n  a {\r\n    color: ${props => props.theme.colors.white};\r\n    font-size: 1.2rem;\r\n    &:hover {\r\n      opacity: 0.85;\r\n      color: ${props => props.theme.colors.white};\r\n    }\r\n  }\r\n`\r\n\r\nconst Header = ({ children }) => (\r\n  <Wrapper>\r\n    <Content>{children}</Content>\r\n  </Wrapper>\r\n)\r\n\r\nexport default Header\r\n\r\nHeader.propTypes = {\r\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.node]).isRequired,\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\n\r\nimport config from '../../config'\r\n\r\nconst SEO = props => {\r\n  const { postNode, postPath, article, buildTime } = props\r\n\r\n  let title\r\n  let description\r\n\r\n  const realPrefix = config.pathPrefix === '/' ? '' : config.pathPrefix\r\n  const homeURL = `${config.siteUrl}${realPrefix}`\r\n  const URL = `${homeURL}${postPath || ''}`\r\n  const image = `${homeURL}${config.siteBanner}`\r\n\r\n  if (article) {\r\n    const postMeta = postNode.frontmatter\r\n    title = `${postMeta.title} | ${config.siteTitle}`\r\n    description = postNode.excerpt\r\n  } else {\r\n    title = config.siteTitleAlt\r\n    description = config.siteDescription\r\n  }\r\n\r\n  // schema.org in JSONLD format\r\n  // https://developers.google.com/search/docs/guides/intro-structured-data\r\n  // You can fill out the 'author', 'creator' with more data or another type (e.g. 'Organization')\r\n\r\n  const schemaOrgWebPage = {\r\n    '@context': 'http://schema.org',\r\n    '@type': 'WebPage',\r\n    url: URL,\r\n    headline: config.siteHeadline,\r\n    inLanguage: config.siteLanguage,\r\n    mainEntityOfPage: URL,\r\n    description: config.siteDescription,\r\n    name: config.siteTitle,\r\n    author: {\r\n      '@type': 'Person',\r\n      name: config.author,\r\n    },\r\n    copyrightHolder: {\r\n      '@type': 'Person',\r\n      name: config.author,\r\n    },\r\n    copyrightYear: '2018',\r\n    creator: {\r\n      '@type': 'Person',\r\n      name: config.author,\r\n    },\r\n    publisher: {\r\n      '@type': 'Person',\r\n      name: config.author,\r\n    },\r\n    datePublished: '2019-01-07T10:30:00+01:00',\r\n    dateModified: buildTime,\r\n    image: {\r\n      '@type': 'ImageObject',\r\n      url: image,\r\n    },\r\n  }\r\n\r\n  // Initial breadcrumb list\r\n\r\n  const itemListElement = [\r\n    {\r\n      '@type': 'ListItem',\r\n      item: {\r\n        '@id': homeURL,\r\n        name: 'Homepage',\r\n      },\r\n      position: 1,\r\n    },\r\n    {\r\n      '@type': 'ListItem',\r\n      item: {\r\n        '@id': `${homeURL}/contact`,\r\n        name: 'Contact',\r\n      },\r\n      position: 2,\r\n    },\r\n  ]\r\n\r\n  let schemaArticle = null\r\n\r\n  if (article) {\r\n    schemaArticle = {\r\n      '@context': 'http://schema.org',\r\n      '@type': 'Article',\r\n      author: {\r\n        '@type': 'Person',\r\n        name: config.author,\r\n      },\r\n      copyrightHolder: {\r\n        '@type': 'Person',\r\n        name: config.author,\r\n      },\r\n      copyrightYear: postNode.parent.birthtime,\r\n      creator: {\r\n        '@type': 'Person',\r\n        name: config.author,\r\n      },\r\n      publisher: {\r\n        '@type': 'Organization',\r\n        name: config.author,\r\n        logo: {\r\n          '@type': 'ImageObject',\r\n          url: `${homeURL}${config.siteLogo}`,\r\n        },\r\n      },\r\n      datePublished: postNode.parent.birthtime,\r\n      dateModified: postNode.parent.mtime,\r\n      description,\r\n      headline: title,\r\n      inLanguage: 'en',\r\n      url: URL,\r\n      name: title,\r\n      image: {\r\n        '@type': 'ImageObject',\r\n        url: image,\r\n      },\r\n      mainEntityOfPage: URL,\r\n    }\r\n    // Push current blogpost into breadcrumb list\r\n    itemListElement.push({\r\n      '@type': 'ListItem',\r\n      item: {\r\n        '@id': URL,\r\n        name: title,\r\n      },\r\n      position: 3,\r\n    })\r\n  }\r\n\r\n  const breadcrumb = {\r\n    '@context': 'http://schema.org',\r\n    '@type': 'BreadcrumbList',\r\n    description: 'Breadcrumbs list',\r\n    name: 'Breadcrumbs',\r\n    itemListElement,\r\n  }\r\n\r\n  return (\r\n    <Helmet>\r\n      <html lang={config.siteLanguage} />\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description} />\r\n      <meta name=\"image\" content={image} />\r\n      <meta name=\"gatsby-starter\" content=\"Gatsby Starter Minimal Blog\" />\r\n      <meta property=\"og:locale\" content={config.ogLanguage} />\r\n      <meta property=\"og:site_name\" content={config.ogSiteName ? config.ogSiteName : ''} />\r\n      <meta property=\"og:url\" content={URL} />\r\n      <meta property=\"og:type\" content={article ? 'article' : 'website'} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={description} />\r\n      <meta property=\"og:image\" content={image} />\r\n      <meta property=\"og:image:alt\" content={description} />\r\n      {config.siteFBAppID && <meta property=\"fb:app_id\" content={config.siteFBAppID} />}\r\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n      <meta name=\"twitter:creator\" content={config.userTwitter ? config.userTwitter : ''} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:url\" content={config.siteUrl} />\r\n      <meta name=\"twitter:description\" content={description} />\r\n      <meta name=\"twitter:image\" content={image} />\r\n      <meta name=\"twitter:image:alt\" content={description} />\r\n      {/* Insert schema.org data conditionally (webpage/article) + everytime (breadcrumbs) */}\r\n      {!article && <script type=\"application/ld+json\">{JSON.stringify(schemaOrgWebPage)}</script>}\r\n      {article && <script type=\"application/ld+json\">{JSON.stringify(schemaArticle)}</script>}\r\n      <script type=\"application/ld+json\">{JSON.stringify(breadcrumb)}</script>\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nexport default SEO\r\n\r\nSEO.propTypes = {\r\n  postNode: PropTypes.object,\r\n  postPath: PropTypes.string,\r\n  article: PropTypes.bool,\r\n  buildTime: PropTypes.string,\r\n}\r\n\r\nSEO.defaultProps = {\r\n  postNode: null,\r\n  postPath: null,\r\n  article: false,\r\n  buildTime: null,\r\n}\r\n","import { lighten } from 'polished'\r\n\r\nconst colors = {\r\n  primary: '#1a8f6e', // Color for buttons or links\r\n  primaryLight: lighten(0.05, '#1a8f6e'),\r\n  bg: '#24292e', // Background color\r\n  article: '#31363f',\r\n  grey: {\r\n    dark: 'rgba(0, 0, 0, 0.9)',\r\n    default: 'rgba(0, 0, 0, 0.7)',\r\n    light: 'rgba(0, 0, 0, 0.2)',\r\n    ultraLight: '#ededed',\r\n  },\r\n  link: '#FFC107',\r\n  white: 'white',\r\n}\r\n\r\nconst transitions = {\r\n  normal: '0.5s',\r\n}\r\n\r\nconst fontSize = {\r\n  small: '0.9rem',\r\n}\r\n\r\nconst fontFamily = {\r\n  serif: `'Bitter', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Helvetica', 'Arial', serif`,\r\n  sansSerif: `'Open Sans', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Helvetica', 'Arial', sans-serif`,\r\n}\r\n\r\nconst breakpoints = {\r\n  tablet: '1200px',\r\n  phone: '600px',\r\n}\r\n\r\nconst theme = {\r\n  colors,\r\n  transitions,\r\n  fontSize,\r\n  breakpoints,\r\n  fontFamily,\r\n  maxWidth: '1000px',\r\n  baseFontSize: '18px',\r\n}\r\n\r\nexport default theme\r\n","import { useStaticQuery, graphql } from 'gatsby'\r\n\r\nconst useBuildTime = () => {\r\n  const time = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        buildTime(formatString: \"YYYY-MM-DD\")\r\n      }\r\n    }\r\n  `)\r\n\r\n  return time.site.buildTime\r\n}\r\n\r\nexport default useBuildTime\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled, { ThemeProvider, createGlobalStyle } from 'styled-components'\r\n\r\nimport SEO from './SEO'\r\nimport theme from '../../config/theme'\r\nimport useBuildTime from '../hooks/useBuildTime'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  *,\r\n  *:before,\r\n  *:after {\r\n    box-sizing: inherit;\r\n  }\r\n  html,\r\n  body {\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n  ::selection {\r\n    color: ${props => props.theme.colors.grey.ultraLight};\r\n    background: ${props => props.theme.colors.primary};\r\n  }\r\n  html {\r\n    font-family: ${props => props.theme.fontFamily.sansSerif};\r\n    font-size: ${props => props.theme.baseFontSize};\r\n    h1 {\r\n      font-size: 3.052rem;\r\n    }\r\n    h2 {\r\n      font-size: 2.441rem;\r\n    }\r\n    h3 {\r\n      font-size: 1.953rem;\r\n    }\r\n    h4 {\r\n      font-size: 1.563rem;\r\n    }\r\n    h5 {\r\n      font-size: 1.25rem;\r\n    }\r\n    @media (max-width: ${props => props.theme.breakpoints.phone}) {\r\n      font-size: 16px;\r\n      h1 {\r\n        font-size: 2.488rem;\r\n      }\r\n      h2 {\r\n        font-size: 2.074rem;\r\n      }\r\n      h3 {\r\n        font-size: 1.728rem;\r\n      }\r\n      h4 {\r\n        font-size: 1.444rem;\r\n      }\r\n      h5 {\r\n        font-size: 1.2rem;\r\n      }\r\n    }\r\n  }\r\n  body {\r\n    background: ${props => props.theme.colors.bg};\r\n    color: ${props => props.theme.colors.grey.ultraLight};\r\n  }\r\n  a {\r\n    color: ${props => props.theme.colors.link};\r\n    text-decoration: none;\r\n    transition: all ${props => props.theme.transitions.normal};\r\n  }\r\n  a:hover {\r\n    color: ${props => props.theme.colors.primaryLight};\r\n  }\r\n  a:not([href]):not([tabindex]) {\r\n    color: inherit;\r\n    text-decoration: none;\r\n    &:hover,\r\n    &:focus {\r\n      color: inherit;\r\n      text-decoration: none;\r\n    }\r\n    &:focus {\r\n      outline: 0;\r\n    }\r\n  }\r\n  h1, h2, h3, h4, h5, h6 {\r\n    color: ${props => props.theme.colors.grey.ultraLight};\r\n    font-family: ${props => props.theme.fontFamily.serif};\r\n  }\r\n  p {\r\n    color: ${props => props.theme.colors.grey.ultraLight};\r\n  }\r\n  blockquote {\r\n    font-style: italic;\r\n    position: relative;\r\n  }\r\n  code {\r\n    font-style: italic;\r\n    color: ${props => props.theme.colors.primaryLight};\r\n    background: ${props => props.theme.colors.grey.light};\r\n  }\r\n  blockquote:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    background: ${props => props.theme.colors.primary};\r\n    height: 100%;\r\n    width: 6px;\r\n    margin-left: -1.6rem;\r\n  }\r\n  label {\r\n    margin-bottom: .5rem;\r\n    color: ${props => props.theme.colors.grey.ultraLight};\r\n  }\r\n  input, textarea, button {\r\n    font-size: 1rem;\r\n  }\r\n  textarea {\r\n    font-family: ${props => props.theme.fontFamily.sansSerif};\r\n  }\r\n  input, textarea {\r\n    border-radius: .5rem;\r\n    border: none;\r\n    background: rgba(0, 0, 0, 0.05);\r\n    padding: .4rem 1rem;\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n  pre {\r\n    margin-top: 0;\r\n    margin-bottom: 1rem;\r\n    overflow: auto;\r\n  }\r\n  figure {\r\n    margin: 0 0 1rem 0;\r\n  }\r\n  img {\r\n    vertical-align: middle;\r\n  }\r\n  [role='button'] {\r\n    cursor: pointer;\r\n  }\r\n  a,\r\n  area,\r\n  button,\r\n  [role='button'],\r\n  input,\r\n  label,\r\n  select,\r\n  summary,\r\n  textarea {\r\n    touch-action: manipulation;\r\n  }\r\n  table {\r\n    border-collapse: collapse;\r\n    background-color: ${props => props.theme.colors.bg};\r\n  }\r\n  caption {\r\n    padding-top: 1.5rem;\r\n    padding-bottom: 1.5rem;\r\n    color: ${props => props.theme.colors.color};\r\n    text-align: center;\r\n    caption-side: bottom;\r\n  }\r\n  th {\r\n    text-align: left;\r\n  }\r\n  fieldset {\r\n    min-width: 0;\r\n    padding: 0;\r\n    margin: 0;\r\n    border: 0;\r\n  }\r\n  legend {\r\n    display: block;\r\n    width: 100%;\r\n    padding: 0;\r\n    margin-bottom: 0.5rem;\r\n    font-size: 1.5rem;\r\n    line-height: inherit;\r\n  }\r\n  input[type='search'] {\r\n    -webkit-appearance: none;\r\n  }\r\n  output {\r\n    display: inline-block;\r\n  }\r\n  svg:not(:root) {\r\n    overflow: hidden;\r\n    vertical-align: middle;\r\n  }\r\n  [hidden] {\r\n    display: none !important;\r\n  }\r\n`\r\n\r\nconst Footer = styled.footer`\r\n  text-align: center;\r\n  padding: 3rem 1rem;\r\n  span {\r\n    font-size: 0.75rem;\r\n  }\r\n`\r\n\r\nconst Layout = ({ children, customSEO }) => {\r\n  const buildTime = useBuildTime()\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <>\r\n        {!customSEO && <SEO buildTime={buildTime} />}\r\n        <GlobalStyle />\r\n        {children}\r\n        <Footer>\r\n          &copy; 2019 by Mike Polinowski<br />\r\n          <a href=\"https://github.com/mpolinowski/\">GitHub</a> <br />\r\n          <span>Last build: {buildTime}</span>\r\n        </Footer>\r\n      </>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.node]).isRequired,\r\n  customSEO: PropTypes.bool,\r\n}\r\n\r\nLayout.defaultProps = {\r\n  customSEO: false,\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'gatsby'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  margin: 6rem auto 0 auto;\r\n  a {\r\n    color: ${props => props.theme.colors.link};\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  justify-items: center;\r\n`\r\n\r\nconst Prev = styled.div`\r\n  span {\r\n    text-transform: uppercase;\r\n    font-size: 0.8rem;\r\n    color: ${props => props.theme.colors.grey.ultraLight};\r\n  }\r\n`\r\n\r\nconst Next = styled.div`\r\n  margin-left: auto;\r\n  text-align: right;\r\n  span {\r\n    text-transform: uppercase;\r\n    font-size: 0.8rem;\r\n    color: ${props => props.theme.colors.grey.ultraLight};\r\n  }\r\n`\r\n\r\nconst PrevNext = ({ next, prev }) => (\r\n  <Wrapper>\r\n    {prev && (\r\n      <Prev>\r\n        <span>Previous</span>\r\n        <Link to={prev.fields.slug}>{prev.frontmatter.title}</Link>\r\n      </Prev>\r\n    )}\r\n\r\n    {next && (\r\n      <Next>\r\n        <span>Next</span>\r\n        <Link to={next.fields.slug}>{next.frontmatter.title}</Link>\r\n      </Next>\r\n    )}\r\n  </Wrapper>\r\n)\r\n\r\nexport default PrevNext\r\n\r\nPrevNext.propTypes = {\r\n  next: PropTypes.object,\r\n  prev: PropTypes.object,\r\n}\r\n\r\nPrevNext.defaultProps = {\r\n  next: null,\r\n  prev: null,\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst SectionTitle = styled.div`\r\n  font-size: ${props => props.theme.fontSize.small};\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  color: ${props => props.theme.colors.grey.ultraLight};\r\n  position: relative;\r\n  padding-bottom: 1rem;\r\n  margin-bottom: 4rem;\r\n\r\n  &:after {\r\n    content: '';\r\n    height: 1px;\r\n    width: 50px;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 50%;\r\n    margin-left: -25px;\r\n    background: ${props => props.theme.colors.grey.ultraLight};\r\n  }\r\n`\r\n\r\nexport default SectionTitle\r\n","import styled from 'styled-components'\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr minmax(280px, ${props => props.theme.maxWidth}) 1fr;\r\n  /* padding: 0 1rem; */\r\n`\r\n\r\nexport default Wrapper\r\n","import Article from './Article'\r\nimport Button from './Button'\r\nimport Header from './Header'\r\nimport Layout from './Layout'\r\nimport PrevNext from './PrevNext'\r\nimport SectionTitle from './SectionTitle'\r\nimport SEO from './SEO'\r\nimport Subline from './Subline'\r\nimport Wrapper from './Wrapper'\r\n\r\nexport { Article, Button, Header, Layout, PrevNext, SectionTitle, SEO, Subline, Wrapper }\r\n"],"sourceRoot":""}