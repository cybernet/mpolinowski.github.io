{"version":3,"sources":["webpack:///.-v2/src/pages/index.js","webpack:///.-v2/src/components/Seo/Seo.js","webpack:///.-v2/src/components/Seo/index.js"],"names":["Index","featureNavigator","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1___default","_this","componentWillMount","this","props","navigatorPosition","setNavigatorPosition","render","data","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_Seo__WEBPACK_IMPORTED_MODULE_7__","React","Component","propTypes","PropTypes","object","isRequired","string","func","isWideScreen","bool","mapDispatchToProps","setNavigatorShape","connect","state","ownProps","Seo","postTitle","frontmatter","title","postDescription","description","postCover","cover","postSlug","fields","slug","config","shortSiteTitle","siteTitle","siteDescription","image","childImageSharp","resize","src","siteImage","url","siteUrl","pathPrefix","react_default","Helmet","htmlAttributes","lang","siteLanguage","prefix","name","content","property","authorTwitterAccount","__webpack_require__","d","__webpack_exports__","components_Seo_Seo"],"mappings":"qMAQMA,sJACJC,iBAAmBA,IAAiBC,KAAjBC,QAAAC,2CAEnBC,mBAAA,WACuC,gBAAjCC,KAAKC,MAAMC,mBACbF,KAAKC,MAAME,qBAAqB,kBAIpCC,OAAA,WACmBJ,KAAKC,MAAdI,KAER,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,WAdYC,IAAMC,WAoB1BjB,EAAMkB,UAAY,CAChBP,KAAMQ,IAAUC,OAAOC,WACvBb,kBAAmBW,IAAUG,OAAOD,WACpCZ,qBAAsBU,IAAUI,KAAKF,WACrCG,aAAcL,IAAUM,KAAKJ,YAG/B,IAOMK,EAAqB,CACzBjB,yBACAkB,uBAGaC,sBAZS,SAACC,EAAOC,GAC9B,MAAO,CACLtB,kBAAmBqB,EAAMrB,kBACzBgB,aAAcK,EAAML,eAWtBE,EAFaE,CAGb5B,mGC7CI+B,EAAM,SAAAxB,GAAS,IACXI,EAASJ,EAATI,KACFqB,IAAcrB,GAAQ,IAAIsB,aAAe,IAAIC,MAC7CC,IAAoBxB,GAAQ,IAAIsB,aAAe,IAAIG,YACnDC,IAAc1B,GAAQ,IAAIsB,aAAe,IAAIK,MAC7CC,IAAa5B,GAAQ,IAAI6B,QAAU,IAAIC,KAEvCP,EAAQF,EAAeA,EAAN,MAAqBU,IAAOC,eAAmBD,IAAOE,UACvER,EAAcD,GAAoCO,IAAOG,gBACzDC,EAAQT,EAAYA,EAAUU,gBAAgBC,OAAOC,IAAMP,IAAOQ,UAClEC,EAAMT,IAAOU,QAAUV,IAAOW,WAAad,EAEjD,OACEe,EAAAzC,EAAAC,cAACyC,EAAA,OAAD,CACEC,eAAgB,CACdC,KAAMf,IAAOgB,aACbC,OAAQ,0BAIVL,EAAAzC,EAAAC,cAAA,aAAQoB,GACRoB,EAAAzC,EAAAC,cAAA,QAAM8C,KAAK,cAAcC,QAASzB,IAElCkB,EAAAzC,EAAAC,cAAA,QAAMgD,SAAS,SAASD,QAASV,IACjCG,EAAAzC,EAAAC,cAAA,QAAMgD,SAAS,WAAWD,QAAS3B,IACnCoB,EAAAzC,EAAAC,cAAA,QAAMgD,SAAS,iBAAiBD,QAASzB,IACzCkB,EAAAzC,EAAAC,cAAA,QAAMgD,SAAS,WAAWD,QAASf,IACnCQ,EAAAzC,EAAAC,cAAA,QAAMgD,SAAS,UAAUD,QAAQ,YAEjCP,EAAAzC,EAAAC,cAAA,QAAM8C,KAAK,eAAeC,QAAQ,YAClCP,EAAAzC,EAAAC,cAAA,QACE8C,KAAK,kBACLC,QAASnB,IAAOqB,qBAAuBrB,IAAOqB,qBAAuB,OAM7EhC,EAAIb,UAAY,CACdP,KAAMQ,IAAUC,QAGHW,QC/CfiC,EAAAC,EAAAC,EAAA,sBAAAC","file":"component---src-pages-index-js-84aa6e8c1e3c2268aab3.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { setNavigatorPosition, setNavigatorShape } from \"../state/store\";\nimport { featureNavigator } from \"../utils/shared\";\nimport Seo from \"../components/Seo\";\n\nclass Index extends React.Component {\n  featureNavigator = featureNavigator.bind(this);\n\n  componentWillMount() {\n    if (this.props.navigatorPosition !== \"is-featured\") {\n      this.props.setNavigatorPosition(\"is-featured\");\n    }\n  }\n\n  render() {\n    const { data } = this.props;\n\n    return (\n      <div>\n        <Seo />\n      </div>\n    );\n  }\n}\n\nIndex.propTypes = {\n  data: PropTypes.object.isRequired,\n  navigatorPosition: PropTypes.string.isRequired,\n  setNavigatorPosition: PropTypes.func.isRequired,\n  isWideScreen: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    navigatorPosition: state.navigatorPosition,\n    isWideScreen: state.isWideScreen\n  };\n};\n\nconst mapDispatchToProps = {\n  setNavigatorPosition,\n  setNavigatorShape\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Index);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Helmet } from \"react-helmet\";\nimport config from \"../../../content/meta/config\";\n\nconst Seo = props => {\n  const { data } = props;\n  const postTitle = ((data || {}).frontmatter || {}).title;\n  const postDescription = ((data || {}).frontmatter || {}).description;\n  const postCover = ((data || {}).frontmatter || {}).cover;\n  const postSlug = ((data || {}).fields || {}).slug;\n\n  const title = postTitle ? `${postTitle} - ${config.shortSiteTitle}` : config.siteTitle;\n  const description = postDescription ? postDescription : config.siteDescription;\n  const image = postCover ? postCover.childImageSharp.resize.src : config.siteImage;\n  const url = config.siteUrl + config.pathPrefix + postSlug;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang: config.siteLanguage,\n        prefix: \"og: http://ogp.me/ns#\"\n      }}\n    >\n      {/* General tags */}\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n      {/* OpenGraph tags */}\n      <meta property=\"og:url\" content={url} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n      <meta property=\"og:type\" content=\"website\" />\n      {/* Twitter Card tags */}\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={config.authorTwitterAccount ? config.authorTwitterAccount : \"\"}\n      />\n    </Helmet>\n  );\n};\n\nSeo.propTypes = {\n  data: PropTypes.object\n};\n\nexport default Seo;\n","export { default } from \"./Seo\";\n"],"sourceRoot":""}