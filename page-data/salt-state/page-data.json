{"componentChunkName":"component---src-templates-post-jsx","path":"/salt-state","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"date\": \"2020-06-16\",\n  \"title\": \"Salt State\",\n  \"categories\": [\"LINUX\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"span\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"gatsby-resp-image-wrapper\",\n    \"style\": {\n      \"position\": \"relative\",\n      \"display\": \"block\",\n      \"marginLeft\": \"auto\",\n      \"marginRight\": \"auto\",\n      \"maxWidth\": \"1024px\"\n    }\n  }), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-resp-image-background-image\",\n    \"style\": {\n      \"paddingBottom\": \"34.375%\",\n      \"position\": \"relative\",\n      \"bottom\": \"0\",\n      \"left\": \"0\",\n      \"backgroundSize\": \"cover\",\n      \"display\": \"block\"\n    }\n  })), \"\\n    \", mdx(\"picture\", {\n    parentName: \"span\"\n  }, \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/c60d5094f191709e25caf30fd93c87ca/8d3d1/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d.webp 256w\", \"/static/c60d5094f191709e25caf30fd93c87ca/354cf/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d.webp 512w\", \"/static/c60d5094f191709e25caf30fd93c87ca/44907/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d.webp 1024w\", \"/static/c60d5094f191709e25caf30fd93c87ca/9579c/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d.webp 1500w\"],\n    \"sizes\": \"(max-width: 1024px) 100vw, 1024px\",\n    \"type\": \"image/webp\"\n  })), \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/c60d5094f191709e25caf30fd93c87ca/b95e4/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d.jpg 256w\", \"/static/c60d5094f191709e25caf30fd93c87ca/1779b/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d.jpg 512w\", \"/static/c60d5094f191709e25caf30fd93c87ca/87945/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d.jpg 1024w\", \"/static/c60d5094f191709e25caf30fd93c87ca/9d81f/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d.jpg 1500w\"],\n    \"sizes\": \"(max-width: 1024px) 100vw, 1024px\",\n    \"type\": \"image/jpeg\"\n  })), \"\\n        \", mdx(\"img\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"className\": \"gatsby-resp-image-image\",\n    \"style\": {\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"margin\": \"0\",\n      \"verticalAlign\": \"middle\",\n      \"position\": \"absolute\",\n      \"top\": \"0\",\n      \"left\": \"0\",\n      \"boxShadow\": \"inset 0px 0px 0px 400px white\"\n    },\n    \"src\": \"/static/c60d5094f191709e25caf30fd93c87ca/87945/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d.jpg\",\n    \"alt\": \"Guangzhou, China\",\n    \"title\": \"\"\n  })), \"\\n      \"), \"\\n  \")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#setting-up-your-minions\"\n  }), \"Setting up your Minions\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#installing-apache\"\n  }), \"Installing Apache\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#configuring-apache\"\n  }), \"Configuring Apache\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#jinja-scripts\"\n  }), \"Jinja Scripts\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#conditionals\"\n  }), \"Conditionals\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#looping\"\n  }), \"Looping\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#scripts-cleanup\"\n  }), \"Scripts CleanUP\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#working-with-dictionaries\"\n  }), \"Working with Dictionaries\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#splitting-up-our-files\"\n  }), \"Splitting up our Files\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#using-custom-python-scripts\"\n  }), \"Using Custom Python Scripts\"))), mdx(\"h2\", {\n    \"id\": \"setting-up-your-minions\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#setting-up-your-minions\",\n    \"aria-label\": \"setting up your minions permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Setting up your Minions\"), mdx(\"h3\", {\n    \"id\": \"installing-apache\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#installing-apache\",\n    \"aria-label\": \"installing apache permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Installing Apache\"), mdx(\"p\", null, \"We can set the state of an Minion inside a YAML file that contains instructions for Salt. Start by creating a folder \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/srv/salt\"), \" and run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git init\"), \" to version your \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.saltstack.com/en/master/ref/states/all/index.html\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"minion state\"), \". To make sure that our minion has \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.saltstack.com/en/master/ref/states/all/salt.states.pkg.html#salt.states.pkg.installed\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"Apache installed\"), \" we will create an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"apache.sls\"), \" file inside the directory \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"on your MASTER\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"install_apache:\\n  pkg.installed:\\n   - name: apache2\\n\")), mdx(\"p\", null, \"You can now execute this set of instructions on your minion server by running:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"sudo salt ubuntuAsus state.sls apache\\n\\nubuntuAsus:\\n----------\\n          ID: install_apache\\n    Function: pkg.installed\\n        Name: apache2\\n      Result: True\\n     Comment: The following packages were installed/updated: apache2\\n     Started: 15:15:20.619100\\n    Duration: 28624.3 ms\\n     Changes:   \\n              ----------\\n              apache2:\\n                  ----------\\n                  new:\\n                      2.4.41-4ubuntu3\\n                  old:\\n              apache2-bin:\\n                  ----------\\n                  new:\\n                      2.4.41-4ubuntu3\\n                  old:\\n              apache2-data:\\n\\nSummary for ubuntuAsus\\n------------\\nSucceeded: 1 (changed=1)\\nFailed:    0\\n------------\\nTotal states run:     1\\nTotal run time:  28.624 s\\n\")), mdx(\"p\", null, \"This step had our Minion download a copy of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"apache.sls\"), \" file from our master and run it's instructions. The master does not need to know how the minion is going to download and install the required software - the OS on our minion makes that decision. Since we have Ubuntu installed on our minion it will run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"apt-get update && apt-get install apache2\"), \".\"), mdx(\"h3\", {\n    \"id\": \"configuring-apache\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#configuring-apache\",\n    \"aria-label\": \"configuring apache permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Configuring Apache\"), mdx(\"p\", null, \"We can now also make sure that Apache will be \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.saltstack.com/en/master/ref/states/all/salt.states.service.html#module-salt.states.service\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"enabled and activated as a service\"), \" by adding the following line to our instruction file:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"install_apache:\\n  pkg.installed:\\n   - name: apache2\\n\\nenable_apache:\\n  service.running:\\n    - name: apache2\\n    - enable: True\\n\")), mdx(\"p\", null, \"We can also configure Apache to display a landing page on Port 80:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"install_apache:\\n  pkg.installed:\\n   - name: apache2\\n\\nenable_apache:\\n  service.running:\\n    - name: apache2\\n    - enable: True\\n\\nadd_landing_page:\\n  file.managed:\\n    - name: /var/www/html/index.html\\n    - contents: |\\n        <!doctype html>\\n        <body><h1>Salty Dayze, Sailor!</h1></body>\\n\")), mdx(\"p\", null, \"Now re-run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"state.sls\"), \" and the default Apache Landing Page will be overwritten by our \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Hello World\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"sudo salt ubuntuAsus state.sls apache test=true\\n\\nsudo salt ubuntuAsus state.sls apache\\n\")), mdx(\"p\", null, \"You can visit the website on your minions IP address and port 80. You can get the IP address by running the following command:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"sudo salt ubuntuAsus network.ip_addrs\\n\\nubuntuAsus:\\n    - 10.1.88.0\\n    - 172.17.0.1\\n    - 192.168.2.111\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\"\n  }), \"curl 192.168.2.111\\n\\n<!doctype html>\\n<body><h1>Salty Dayze, Sailor!</h1></body>\\n\")), mdx(\"h2\", {\n    \"id\": \"jinja-scripts\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#jinja-scripts\",\n    \"aria-label\": \"jinja scripts permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Jinja Scripts\"), mdx(\"h3\", {\n    \"id\": \"conditionals\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#conditionals\",\n    \"aria-label\": \"conditionals permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Conditionals\"), mdx(\"p\", null, \"The Apache install script in this form will only work for Debian-based operating system - the Apache package is called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"apache2\"), \" on Ubuntu but \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"httpd\"), \" on CentOS. We can use the Jinja script syntax to make our script more robust:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"install_apache:\\n  pkg.installed:\\n   {% if salt.grains.get('os_family') == 'Debian' %}\\n   - name: apache2\\n   {% elif salt.grains.get('os_family') == 'RedHat' %}\\n   - name: httpd\\n   {% endif %}\\n\\nenable_apache:\\n  service.running:\\n    {% if salt.grains.get('os_family') == 'Debian' %}\\n    - name: apache2\\n    {% elif salt.grains.get('os_family') == 'RedHat' %}\\n    - name: httpd\\n    {% endif %}\\n    - enable: True\\n\\nadd_landing_page:\\n  file.managed:\\n    - name: /var/www/html/index.html\\n    - contents: |\\n        <!doctype html>\\n        <body><h1>Salty Dayze, Sailor!</h1></body>\\n\")), mdx(\"p\", null, \"We can test this script with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"state.show_sls\"), \" command:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"sudo salt '*' state.show_sls apache | less\\n\\nubuntuAsus:\\n    ----------\\n    enable_apache:\\n        ----------\\n        __env__:\\n            base\\n        __sls__:\\n            apache\\n        service:\\n            |_\\n              ----------\\n              name:\\n                  apache2\\n            |_\\n              ----------\\n              enable:\\n                  True\\n            - running\\n            |_\\n              ----------\\n              order:\\n                  10001\\n\")), mdx(\"p\", null, \"We can see that our Ubuntu Minion correctly resolved the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"apache2\"), \" package and not \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"httpd\"), \".\"), mdx(\"h3\", {\n    \"id\": \"looping\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#looping\",\n    \"aria-label\": \"looping permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Looping\"), mdx(\"p\", null, \"To configure Apache we can now create configuration files in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"conf-available\"), \" directory and copy them over into the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"conf-enabled\"), \" directory to start using them:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"mod_status:\\n  file.managed:\\n    - name: /etc/apache2/conf-available/mod_status.conf\\n    - contents: |\\n      <Location \\\"/status\\\">\\n        SetHandler server-status\\n      </Location>\\n  cmd.run:\\n    - name: a2enmod status && a2enconf mod_status\\n    - creates: /etc/apache2/conf-enabled/mod_status.conf\\n\\nmod_info:\\n  file.managed:\\n    - name: /etc/apache2/conf-available/mod_info.conf\\n    - contents: |\\n      <Location \\\"/info\\\">\\n        SetHandler server-info\\n      </Location>\\n  cmd.run:\\n    - name: a2enmod info && a2enconf mod_info\\n    - creates: /etc/apache2/conf-enabled/mod_info.conf\\n\")), mdx(\"p\", null, \"This configuration script can be compacted by writing a for-loop:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"{% for conf in ['status', 'info'] %}\\n\\nmod_{{ conf }}:\\n  file.managed:\\n    - name: /etc/apache2/conf-available/mod_{{ conf }}.conf\\n    - contents: |\\n        <Location \\\"/{{ conf }}\\\">\\n            SetHandler server-{{ conf }}\\n        </Location>\\n\\n  {% if salt.grains.get('os_family') == 'Debian' %}\\n  cmd.run:\\n    - name: a2enmod {{ conf }} && a2enconf mod_{{ conf }}\\n    - creates: /etc/apache2/conf-enabled/mod_{{ conf }}.conf\\n  {% endif %}\\n\\n{% endfor %}\\n\")), mdx(\"p\", null, \"The command step is only necessary on Debian systems and can be wrapped into a conditional. We can again test our script:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"sudo salt '*' state.show_sls mods | less\\n\\nubuntuAsus:\\n    ----------\\n    mod_info:\\n        ----------\\n        __env__:\\n            base\\n        __sls__:\\n            mods\\n    ...\\n\")), mdx(\"h3\", {\n    \"id\": \"scripts-cleanup\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#scripts-cleanup\",\n    \"aria-label\": \"scripts cleanup permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Scripts CleanUP\"), mdx(\"p\", null, \"Commenting your scripts and separating logic from state:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"apache.sls\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"# Install vanilla Apache on Debian/RedHat\\n\\n{% if salt.grains.get('os_family') == 'Debian' %}\\n{% set apache_pkg = 'apache2' %}\\n{% elif salt.grains.get('os_family') == 'RedHat' %}\\n{% set apache_pkg = 'httpd' %}\\n{% endif %}\\n\\ninstall_apache:\\n  pkg.installed:\\n   - name: {{ apache_pkg }}\\n\\nenable_apache:\\n  service.running:\\n    - name: {{ apache_pkg }}\\n\\n    # Will be enabled automatically on Debian but has to be enabled manually on RedHat\\n    - enable: True\\n\\n# Adding a blank front page\\nadd_landing_page:\\n  file.managed:\\n    - name: /var/www/html/index.html\\n    - contents: |\\n        <!doctype html>\\n        <body><h1>Salty Dayze, Sailor!</h1></body>\\n\")), mdx(\"h3\", {\n    \"id\": \"working-with-dictionaries\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#working-with-dictionaries\",\n    \"aria-label\": \"working with dictionaries permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Working with Dictionaries\"), mdx(\"p\", null, \"Create a lookup dictionary to assign the correct package and service name for each minion:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"apache.sls\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"# Install vanilla Apache on Debian/RedHat\\n\\n{% set lookup = {\\n    'Debian': {\\n        'pkg': 'apache2',\\n        'srv': 'apache2'\\n    },\\n    'RedHat': {\\n        'pkg': 'httpd',\\n        'srv': 'httpd'\\n    }\\n} %}\\n\\n{% set apache = lookup[salt.grains.get('os_family')] %}\\n\\ninstall_apache:\\n  pkg.installed:\\n   - name: {{ apache.pkg }}\\n\\nenable_apache:\\n  service.running:\\n    - name: {{ apache.srv }}\\n\\n    # Will be enabled automatically on Debian but has to be enabled manually on RedHat\\n    - enable: True\\n\\n# Adding a blank front page\\nadd_landing_page:\\n  file.managed:\\n    - name: /var/www/html/index.html\\n    - contents: |\\n        <!doctype html>\\n        <body><h1>Salty Dayze, Sailor!</h1></body>\\n\")), mdx(\"p\", null, \"making this is a little bit more compact by using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"grains.filter_by\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"sudo salt '*' grains.filter_by '{Debian: apache2, RedHat: httpd}'\\n\\nubuntuAsus:\\n    apache2\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"apache.sls\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"# Install vanilla Apache on Debian/RedHat\\n\\n{% set apache = salt.grains.filter_by({\\n    'Debian': {\\n        'pkg': 'apache2',\\n        'srv': 'apache2'\\n    },\\n    'RedHat': {\\n        'pkg': 'httpd',\\n        'srv': 'httpd'\\n    }\\n}) %}\\n\\ninstall_apache:\\n  pkg.installed:\\n   - name: {{ apache.pkg }}\\n\\nenable_apache:\\n  service.running:\\n    - name: {{ apache.srv }}\\n\\n    # Will be enabled automatically on Debian but has to be enabled manually on RedHat\\n    - enable: True\\n\\n# Adding a blank front page\\nadd_landing_page:\\n  file.managed:\\n    - name: /var/www/html/index.html\\n    - contents: |\\n        <!doctype html>\\n        <body><h1>Salty Dayze, Sailor!</h1></body>\\n\")), mdx(\"p\", null, \"Again, you can test your script with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sudo salt '*' state.show_sls apache | less\"), \".\"), mdx(\"h3\", {\n    \"id\": \"splitting-up-our-files\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#splitting-up-our-files\",\n    \"aria-label\": \"splitting up our files permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Splitting up our Files\"), mdx(\"p\", null, \"We can now break up our configuration file so that every SLS file only does one thing - if possible. We will collect the resulting files inside a subdirectory \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/srv/salt/apache\"), \":\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"welcome.sls\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"# Adding a blank front page\\nadd_landing_page:\\n  file.managed:\\n    - name: /var/www/html/index.html\\n    - contents: |\\n        <!doctype html>\\n        <body><h1>Salty Dayze, Sailor!</h1></body>\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"map.sls\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"# Get package/service name per OS version\\n{% set apache = salt.grains.filter_by({\\n    'Debian': {\\n        'pkg': 'apache2',\\n        'srv': 'apache2'\\n    },\\n    'RedHat': {\\n        'pkg': 'httpd',\\n        'srv': 'httpd'\\n    }\\n}) %}\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"init.sls\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"# Install vanilla Apache on Debian/RedHat\\n\\n{% from \\\"apache/map.sls\\\" import apache with context %}\\n\\ninstall_apache:\\n  pkg.installed:\\n   - name: {{ apache.pkg }}\\n\\nenable_apache:\\n  service.running:\\n    - name: {{ apache.srv }}\\n\\n    # Will be enabled automatically on Debian but has to be enabled manually on RedHat\\n    - enable: True\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"mods.sls\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"{% for conf in ['status', 'info'] %}\\n\\nmod_{{ conf }}:\\n  file.managed:\\n    - name: /etc/apache2/conf-available/mod_{{ conf }}.conf\\n    - contents: |\\n        <Location \\\"/{{ conf }}\\\">\\n            SetHandler server-{{ conf }}\\n        </Location>\\n\\n  {% if salt.grains.get('os_family') == 'Debian' %}\\n  cmd.run:\\n    - name: a2enmod {{ conf }} && a2enconf mod_{{ conf }}\\n    - creates: /etc/apache2/conf-enabled/mod_{{ conf }}.conf\\n  {% endif %}\\n\\n{% endfor %}\\n\")), mdx(\"p\", null, \"Again, you can test your script with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sudo salt '*' state.show_sls apache | less\")), mdx(\"h2\", {\n    \"id\": \"using-custom-python-scripts\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#using-custom-python-scripts\",\n    \"aria-label\": \"using custom python scripts permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Using Custom Python Scripts\"), mdx(\"p\", null, \"You can write your own Python modules and execute them with Salt. Start by creating a folder \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/srv/salt/_modules\"), \" and add your Python scripts - \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"myUtils.py\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"def getDate():\\n    return __salt__['cmd.run']('date')\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"sudo salt '*' saltutil.sync_modules  //sync script with all minions\\nsudo salt '*' myUtils.getDate\\n\\nubuntuAsus:\\n    Tue Aug  4 09:19:49 UTC 2020\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Setting up your Minions Installing Apache Configuring Apache Jinja Scripts Conditionals Looping Scripts CleanUP Working with Dictionaries…","frontmatter":{"title":"Salt State","date":"06/16/2020","categories":["LINUX"]},"timeToRead":2,"parent":{"__typename":"File","mtime":"2020-08-04T10:53:37.385Z","birthtime":"2020-08-03T14:02:10.549Z"}}},"pageContext":{"slug":"/salt-state","prev":{"fields":{"slug":"/salty-dev-ops"},"frontmatter":{"title":"Salty DevOps","categories":["LINUX"]}},"next":null}},"staticQueryHashes":["2658404678"]}