{"componentChunkName":"component---src-templates-post-jsx","path":"/running-gitlab-as-docker-registry","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"date\": \"2020-02-02\",\n  \"title\": \"Running Gitlab as Docker Registry\",\n  \"categories\": [\"LINUX\", \"Docker\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"span\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"gatsby-resp-image-wrapper\",\n    \"style\": {\n      \"position\": \"relative\",\n      \"display\": \"block\",\n      \"marginLeft\": \"auto\",\n      \"marginRight\": \"auto\",\n      \"maxWidth\": \"1024px\"\n    }\n  }), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-resp-image-background-image\",\n    \"style\": {\n      \"paddingBottom\": \"39.453125%\",\n      \"position\": \"relative\",\n      \"bottom\": \"0\",\n      \"left\": \"0\",\n      \"backgroundSize\": \"cover\",\n      \"display\": \"block\"\n    }\n  })), \"\\n    \", mdx(\"picture\", {\n    parentName: \"span\"\n  }, \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/2a165278b5634b6d008278419a88c7d2/8d3d1/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d.webp 256w\", \"/static/2a165278b5634b6d008278419a88c7d2/354cf/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d.webp 512w\", \"/static/2a165278b5634b6d008278419a88c7d2/44907/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d.webp 1024w\", \"/static/2a165278b5634b6d008278419a88c7d2/9579c/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d.webp 1500w\"],\n    \"sizes\": \"(max-width: 1024px) 100vw, 1024px\",\n    \"type\": \"image/webp\"\n  })), \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/2a165278b5634b6d008278419a88c7d2/b95e4/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d.jpg 256w\", \"/static/2a165278b5634b6d008278419a88c7d2/1779b/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d.jpg 512w\", \"/static/2a165278b5634b6d008278419a88c7d2/87945/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d.jpg 1024w\", \"/static/2a165278b5634b6d008278419a88c7d2/9d81f/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d.jpg 1500w\"],\n    \"sizes\": \"(max-width: 1024px) 100vw, 1024px\",\n    \"type\": \"image/jpeg\"\n  })), \"\\n        \", mdx(\"img\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"className\": \"gatsby-resp-image-image\",\n    \"style\": {\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"margin\": \"0\",\n      \"verticalAlign\": \"middle\",\n      \"position\": \"absolute\",\n      \"top\": \"0\",\n      \"left\": \"0\",\n      \"boxShadow\": \"inset 0px 0px 0px 400px white\"\n    },\n    \"src\": \"/static/2a165278b5634b6d008278419a88c7d2/87945/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d.jpg\",\n    \"alt\": \"Siem Reap, Cambodia\",\n    \"title\": \"\"\n  })), \"\\n      \"), \"\\n  \")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#install-the-local-docker-registry\"\n  }), \"Install the Local Docker Registry\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#copy-an-image-from-docker-hub-to-your-registry\"\n  }), \"Copy an image from Docker Hub to your Registry\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#podman-and-insecure-registries\"\n  }), \"Podman and insecure Registries\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#pushing-images-into-your-local-registry\"\n  }), \"Pushing Images into your local Registry\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#pulling-images-from-your-local-registry\"\n  }), \"Pulling Images from your local Registry\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#enable-the-container-registry-in-gitlab\"\n  }), \"Enable the Container Registry in Gitlab\"))), mdx(\"h2\", {\n    \"id\": \"install-the-local-docker-registry\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#install-the-local-docker-registry\",\n    \"aria-label\": \"install the local docker registry permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Install the Local Docker Registry\"), mdx(\"p\", null, \"Use a command like the following to start the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.docker.com/registry/deploying/\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"registry container\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"podman run -d -p 5000:5000 --restart=always --name registry registry:2\\n\\npodman ps -a\\n\\nCONTAINER ID  IMAGE                         STATUS             PORTS                   NAMES\\n1a14df139a2f  docker.io/library/registry:2  Up 28 seconds ago  0.0.0.0:5000->5000/tcp  registry\\n\")), mdx(\"h3\", {\n    \"id\": \"copy-an-image-from-docker-hub-to-your-registry\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#copy-an-image-from-docker-hub-to-your-registry\",\n    \"aria-label\": \"copy an image from docker hub to your registry permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Copy an image from Docker Hub to your Registry\"), mdx(\"p\", null, \"Pull the ubuntu:16.04 image from Docker Hub:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"podman pull hello-world:latest\\n\")), mdx(\"p\", null, \"Tag the image as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"localhost:5000/my-world\"), \". This creates an additional tag for the existing image. When the first part of the tag is a hostname and port, Docker interprets this as the location of a registry, when pushing.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"podman tag hello-world:latest localhost:5000/my-world\\n\\npodman images\\n\\nREPOSITORY\\ndocker.io/gitlab/gitlab-ce     latest            8065f4b39790   4 days ago     2.06 GB\\ndocker.io/library/registry     2                 708bc6af7e5e   3 months ago   26.3 MB\\nlocalhost:5000/my-world        latest            bf756fb1ae65   4 months ago   20 kB\\n\")), mdx(\"h3\", {\n    \"id\": \"podman-and-insecure-registries\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#podman-and-insecure-registries\",\n    \"aria-label\": \"podman and insecure registries permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Podman and insecure Registries\"), mdx(\"p\", null, \"We can add our local and non-TLS protected Docker Registry through the system-wide registries configuration file. On CentOS 8, that file resides at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/etc/containers/registries.conf\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-conf\"\n  }), \"# The only valid categories are: 'registries.search', 'registries.insecure', \\n# and 'registries.block'.\\n\\n[registries.search]\\nregistries = ['docker.io', 'quay.io']\\n\\n# If you need to access insecure registries, add the registry's fully-qualified name.\\n# An insecure registry is one that does not have a valid SSL certificate or only does HTTP.\\n[registries.insecure]\\nregistries = ['localhost:5000']\\n\")), mdx(\"p\", null, \"Here you can see I have two registries defined under the search header and a single registry defined as an insecure registry - our local registry on port \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"5000\"), \". The registries under the search header are registries that Podman will search when you try to find an image that is not fully-qualified.\"), mdx(\"h3\", {\n    \"id\": \"pushing-images-into-your-local-registry\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#pushing-images-into-your-local-registry\",\n    \"aria-label\": \"pushing images into your local registry permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Pushing Images into your local Registry\"), mdx(\"p\", null, \"Push the image to the local registry running at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"localhost:5000\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"podman push localhost:5000/my-world\\n\\nGetting image source signatures\\nCopying blob 9c27e219663c done\\nCopying config bf756fb1ae done\\nWriting manifest to image destination\\nStoring signatures\\n\")), mdx(\"h3\", {\n    \"id\": \"pulling-images-from-your-local-registry\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#pulling-images-from-your-local-registry\",\n    \"aria-label\": \"pulling images from your local registry permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Pulling Images from your local Registry\"), mdx(\"p\", null, \"Remove the locally-cached \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"hello-world:latest\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"localhost:5000/my-world\"), \" images, so that you can test pulling the image from your registry. This does not remove the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"localhost:5000/my-world\"), \" image from your registry.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"podman rmi hello-world:latest\\npodman rmi localhost:5000/my-world\\n\\npodman images\\n\")), mdx(\"p\", null, \"Pull the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"localhost:5000/my-world\"), \" image from your local registry:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"podman pull localhost:5000/my-world\\n\\npodman run localhost:5000/my-world \\n\")), mdx(\"h2\", {\n    \"id\": \"enable-the-container-registry-in-gitlab\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#enable-the-container-registry-in-gitlab\",\n    \"aria-label\": \"enable the container registry in gitlab permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Enable the Container Registry in Gitlab\"), mdx(\"p\", null, \"After the installation is complete, you will have to configure the Registry\\u2019s settings in gitlab.yml in order to enable it.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"nano /srv/gitlab/data/gitlab-rails/etc/gitlab.yml\\n\")), mdx(\"p\", null, \"Scroll down to the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Container Registry\"), \" section and add the following information:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yml\"\n  }), \" ## Container Registry\\n  registry:\\n    enabled: true\\n    host: centos8.fritz.box\\n    port: 5005\\n    api_url: http://localhost:5000/\\n    key: /var/opt/gitlab/gitlab-rails/etc/gitlab-registry.key\\n    path: shared/registry\\n    issuer: omnibus-gitlab-issuer\\n\")), mdx(\"p\", null, \"Your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nano /srv/gitlab/config/gitlab.rb\"), \" should contain the Registry URL as well as the path to the existing TLS certificate and key used by GitLab:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ruby\"\n  }), \"##########################################################################\\n## Container Registry settings\\n##! Docs: https://docs.gitlab.com/ee/administration/container_registry.html\\n###########################################################################\\n\\nregistry_external_url 'http://centos8.fritz.box:5005'\\n\")), mdx(\"p\", null, \"Your local registry is now available from inside your repository:\"), mdx(\"p\", null, mdx(\"span\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"gatsby-resp-image-wrapper\",\n    \"style\": {\n      \"position\": \"relative\",\n      \"display\": \"block\",\n      \"marginLeft\": \"auto\",\n      \"marginRight\": \"auto\",\n      \"maxWidth\": \"1024px\"\n    }\n  }), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-resp-image-background-image\",\n    \"style\": {\n      \"paddingBottom\": \"45.3125%\",\n      \"position\": \"relative\",\n      \"bottom\": \"0\",\n      \"left\": \"0\",\n      \"backgroundSize\": \"cover\",\n      \"display\": \"block\"\n    }\n  })), \"\\n    \", mdx(\"picture\", {\n    parentName: \"span\"\n  }, \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/c3f8c2574a371d861fb1c82eacc08e22/8d3d1/Gitlab_Docker_Registry_01.webp 256w\", \"/static/c3f8c2574a371d861fb1c82eacc08e22/354cf/Gitlab_Docker_Registry_01.webp 512w\", \"/static/c3f8c2574a371d861fb1c82eacc08e22/44907/Gitlab_Docker_Registry_01.webp 1024w\", \"/static/c3f8c2574a371d861fb1c82eacc08e22/7e3cb/Gitlab_Docker_Registry_01.webp 1050w\"],\n    \"sizes\": \"(max-width: 1024px) 100vw, 1024px\",\n    \"type\": \"image/webp\"\n  })), \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/c3f8c2574a371d861fb1c82eacc08e22/85b06/Gitlab_Docker_Registry_01.png 256w\", \"/static/c3f8c2574a371d861fb1c82eacc08e22/bc282/Gitlab_Docker_Registry_01.png 512w\", \"/static/c3f8c2574a371d861fb1c82eacc08e22/f1720/Gitlab_Docker_Registry_01.png 1024w\", \"/static/c3f8c2574a371d861fb1c82eacc08e22/57cd1/Gitlab_Docker_Registry_01.png 1050w\"],\n    \"sizes\": \"(max-width: 1024px) 100vw, 1024px\",\n    \"type\": \"image/png\"\n  })), \"\\n        \", mdx(\"img\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"className\": \"gatsby-resp-image-image\",\n    \"style\": {\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"margin\": \"0\",\n      \"verticalAlign\": \"middle\",\n      \"position\": \"absolute\",\n      \"top\": \"0\",\n      \"left\": \"0\",\n      \"boxShadow\": \"inset 0px 0px 0px 400px white\"\n    },\n    \"src\": \"/static/c3f8c2574a371d861fb1c82eacc08e22/f1720/Gitlab_Docker_Registry_01.png\",\n    \"alt\": \"Running Gitlab as Docker Registry\",\n    \"title\": \"\"\n  })), \"\\n      \"), \"\\n  \")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Install the Local Docker Registry Copy an image from Docker Hub to your Registry Podman and insecure Registries Pushing Images into your…","frontmatter":{"title":"Running Gitlab as Docker Registry","date":"02/02/2020","categories":["LINUX","Docker"]},"timeToRead":1,"parent":{"__typename":"File","mtime":"2020-05-20T16:25:58.346Z","birthtime":"2020-05-20T13:19:35.448Z"}}},"pageContext":{"slug":"/running-gitlab-as-docker-registry","prev":{"fields":{"slug":"/running-gitlab-in-podman-on-cent-os-8"},"frontmatter":{"title":"Running Gitlab in Podman on CentOS8","categories":["LINUX","Docker"]}},"next":null}}}