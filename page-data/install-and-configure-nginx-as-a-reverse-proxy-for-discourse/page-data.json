{"componentChunkName":"component---src-templates-post-jsx","path":"/install-and-configure-nginx-as-a-reverse-proxy-for-discourse","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"date\": \"2019-06-16\",\n  \"title\": \"Install and Configure Nginx as a Reverse Proxy for Discourse\",\n  \"categories\": [\"Linux\", \"Docker\", \"NGINX\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"span\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"gatsby-resp-image-wrapper\",\n    \"style\": {\n      \"position\": \"relative\",\n      \"display\": \"block\",\n      \"marginLeft\": \"auto\",\n      \"marginRight\": \"auto\",\n      \"maxWidth\": \"1024px\"\n    }\n  }), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-resp-image-background-image\",\n    \"style\": {\n      \"paddingBottom\": \"54.866666666666674%\",\n      \"position\": \"relative\",\n      \"bottom\": \"0\",\n      \"left\": \"0\",\n      \"backgroundSize\": \"cover\",\n      \"display\": \"block\"\n    }\n  })), \"\\n    \", mdx(\"picture\", {\n    parentName: \"span\"\n  }, \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/93aa368e14dab2ea7f7159c2a5329926/a9925/photo-456t66d_64567fh6dgjkhg4_d.webp 256w\", \"/static/93aa368e14dab2ea7f7159c2a5329926/5406f/photo-456t66d_64567fh6dgjkhg4_d.webp 512w\", \"/static/93aa368e14dab2ea7f7159c2a5329926/ae385/photo-456t66d_64567fh6dgjkhg4_d.webp 1024w\", \"/static/93aa368e14dab2ea7f7159c2a5329926/2cd02/photo-456t66d_64567fh6dgjkhg4_d.webp 1500w\"],\n    \"sizes\": \"(max-width: 1024px) 100vw, 1024px\",\n    \"type\": \"image/webp\"\n  })), \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/93aa368e14dab2ea7f7159c2a5329926/68367/photo-456t66d_64567fh6dgjkhg4_d.jpg 256w\", \"/static/93aa368e14dab2ea7f7159c2a5329926/d763f/photo-456t66d_64567fh6dgjkhg4_d.jpg 512w\", \"/static/93aa368e14dab2ea7f7159c2a5329926/4c7b4/photo-456t66d_64567fh6dgjkhg4_d.jpg 1024w\", \"/static/93aa368e14dab2ea7f7159c2a5329926/56304/photo-456t66d_64567fh6dgjkhg4_d.jpg 1500w\"],\n    \"sizes\": \"(max-width: 1024px) 100vw, 1024px\",\n    \"type\": \"image/jpeg\"\n  })), \"\\n        \", mdx(\"img\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"className\": \"gatsby-resp-image-image\",\n    \"style\": {\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"margin\": \"0\",\n      \"verticalAlign\": \"middle\",\n      \"position\": \"absolute\",\n      \"top\": \"0\",\n      \"left\": \"0\",\n      \"boxShadow\": \"inset 0px 0px 0px 400px white\"\n    },\n    \"src\": \"/static/93aa368e14dab2ea7f7159c2a5329926/4c7b4/photo-456t66d_64567fh6dgjkhg4_d.jpg\",\n    \"alt\": \"Sapporo, Japan\",\n    \"title\": \"\"\n  })), \"\\n      \"), \"\\n  \")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#download-discourse-from-github\"\n  }), \"Download Discourse from Github\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#configure-discourse\"\n  }), \"Configure Discourse\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#set-mail-credentials\"\n  }), \"Set Mail Credentials\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#set-domain\"\n  }), \"Set Domain\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#optional-tune-memory-settings\"\n  }), \"Optional: Tune Memory Settings\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#bootstrap-discourse\"\n  }), \"Bootstrap Discourse\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#access-discourse\"\n  }), \"Access Discourse\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#sign-up-and-create-admin-account\"\n  }), \"Sign Up and Create Admin Account\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#upgrade\"\n  }), \"Upgrade\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#install-plugins\"\n  }), \"Install Plugins\"))), mdx(\"h2\", {\n    \"id\": \"port-mapping\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#port-mapping\",\n    \"aria-label\": \"port mapping permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Port Mapping\"), mdx(\"p\", null, \"By default, all HTTP and HTTPS requests will be handled by the Docker proxy. And for this guide, we will use Nginx for this purpose - all HTTP and HTTPS will be handled by Nginx web server.\"), mdx(\"p\", null, \"So we need to change the docker port mapping configuration. The Discourse container will only have the HTTP connection, and the host will be open new port \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"7777\"), \" and map to the container port 80:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"expose:\\n   - \\\"7777:80\\\" # http\\n # - \\\"443:443\\\" # https\\n\")), mdx(\"p\", null, \"This configuration file can be found in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/opt/discourse/containers/app.yml\"), \" (\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/installing-discourse-on-centos-8\"\n  }), \"See previous Tutorial\"), \").\"), mdx(\"p\", null, \"After changing the Port mapping you will have to rebuild the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"./launcher rebuild app\"), \" - see previous tutorial for details.\"), mdx(\"p\", null, \"And the Discourse Docker container is up and running - check it using the 'docker ps' command.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"docker ps -a\\n\")), mdx(\"p\", null, \"Check the host open port using netstat, and make sure the new service docker-proxy with port 7777 is on the list.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"netstat -plntu\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note\"), \": netstat is missing on CentOS 8. Run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"yum whatprovides netstat\"), \" to find out what package provides this tool (net-tools). And then run the installer as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"yum -y install net-tools\"), \".\"), mdx(\"p\", null, mdx(\"span\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"gatsby-resp-image-wrapper\",\n    \"style\": {\n      \"position\": \"relative\",\n      \"display\": \"block\",\n      \"marginLeft\": \"auto\",\n      \"marginRight\": \"auto\",\n      \"maxWidth\": \"772px\"\n    }\n  }), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-resp-image-background-image\",\n    \"style\": {\n      \"paddingBottom\": \"80.44041450777202%\",\n      \"position\": \"relative\",\n      \"bottom\": \"0\",\n      \"left\": \"0\",\n      \"backgroundSize\": \"cover\",\n      \"display\": \"block\"\n    }\n  })), \"\\n    \", mdx(\"picture\", {\n    parentName: \"span\"\n  }, \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/382e71f05eff73c61c0bcf3809cd198d/a9925/Discourse_01.webp 256w\", \"/static/382e71f05eff73c61c0bcf3809cd198d/5406f/Discourse_01.webp 512w\", \"/static/382e71f05eff73c61c0bcf3809cd198d/c8ef5/Discourse_01.webp 772w\"],\n    \"sizes\": \"(max-width: 772px) 100vw, 772px\",\n    \"type\": \"image/webp\"\n  })), \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/382e71f05eff73c61c0bcf3809cd198d/2c438/Discourse_01.png 256w\", \"/static/382e71f05eff73c61c0bcf3809cd198d/53eb4/Discourse_01.png 512w\", \"/static/382e71f05eff73c61c0bcf3809cd198d/aa089/Discourse_01.png 772w\"],\n    \"sizes\": \"(max-width: 772px) 100vw, 772px\",\n    \"type\": \"image/png\"\n  })), \"\\n        \", mdx(\"img\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"className\": \"gatsby-resp-image-image\",\n    \"style\": {\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"margin\": \"0\",\n      \"verticalAlign\": \"middle\",\n      \"position\": \"absolute\",\n      \"top\": \"0\",\n      \"left\": \"0\",\n      \"boxShadow\": \"inset 0px 0px 0px 400px white\"\n    },\n    \"src\": \"/static/382e71f05eff73c61c0bcf3809cd198d/aa089/Discourse_01.png\",\n    \"alt\": \"Discourse on CentOS 8\",\n    \"title\": \"\"\n  })), \"\\n      \"), \"\\n  \")), mdx(\"h2\", {\n    \"id\": \"generate-the-ssl-letsencrypt\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#generate-the-ssl-letsencrypt\",\n    \"aria-label\": \"generate the ssl letsencrypt permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Generate the SSL Letsencrypt\"), mdx(\"p\", null, \"Install Letsencrypt command line tool using the yum command in the following way.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"yum -y install letsencrypt\\n\")), mdx(\"p\", null, \"After the installation, add new HTTP and HTTPS service to the firewallD configuration (if applicable):\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"firewall-cmd --add-service=http --permanent\\nfirewall-cmd --add-service=https --permanent\\nfirewall-cmd --reload\\n\")), mdx(\"p\", null, \"Now generate new SSL certificates for Discourse forum using letsencrypt command below.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"letsencrypt certonly\\n\")), mdx(\"p\", null, \"You will see two verifications from Letsencrypt. Type number \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"1\"), \" to spin up a temporary web server for authentication.\"), mdx(\"p\", null, \"As part of this, type your email address for renewing notification, type \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"A\"), \" to agree on the letsencrypt Terms Of Service.\"), mdx(\"p\", null, \"Now type the discourse domain name \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"test1234.instar.co.uk\"), \". New SSL certificate from letsencrypt has been generated in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/etc/letsencrypt/live\"), \" directory.\"), mdx(\"h2\", {\n    \"id\": \"install-and-configure-nginx\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#install-and-configure-nginx\",\n    \"aria-label\": \"install and configure nginx permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Install and Configure Nginx\"), mdx(\"p\", null, \"In this tutorial, we will be using the Nginx web server as a reverse proxy for Discourse that's running under the Docker container. The Nginx web server will run under HTTP and HTTPS port, and all client requests will be handled by Nginx.\"), mdx(\"p\", null, \"Before installing the Nginx web server, we need to install the EPEL repository on the system.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"yum -y install epel-release\\n\")), mdx(\"p\", null, \"Now install nginx from the EPEL repository using the following yum command.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"yum -y install nginx\\n\")), mdx(\"p\", null, \"After all the installation is complete, go to the nginx configuration directory:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"cd /etc/nginx/\\n\")), mdx(\"p\", null, \"And create a new additional SSL configuration:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"nano ssl.conf\\n\")), mdx(\"p\", null, \"Paste the following SSL configuration there.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-nginx\"\n  }), \"ssl_session_timeout 1d;\\nssl_session_cache shared:SSL:50m;\\nssl_session_tickets off;\\n \\nssl_protocols TLSv1.2;\\nssl_ciphers EECDH+AESGCM:EECDH+AES;\\nssl_ecdh_curve secp384r1;\\nssl_prefer_server_ciphers on;\\n \\nssl_stapling on;\\nssl_stapling_verify on;\\n \\nadd_header Strict-Transport-Security \\\"max-age=15768000; includeSubdomains; preload\\\";\\nadd_header X-Frame-Options DENY;\\nadd_header X-Content-Type-Options nosniff;\\n\")), mdx(\"p\", null, \"Save the changes and exit the editor.\"), mdx(\"p\", null, \"Next, create a new nginx virtual host file for Discourse:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"nano conf.d/discourse.conf\\n\")), mdx(\"p\", null, \"Paste the following configuration there.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-nginx\"\n  }), \"server {\\n     listen 80; listen [::]:80;\\n     server_name test1234.instar.co.uk;\\n  \\n     # Automatic Redirect HTTP to HTTPS Nginx\\n     return 301 https://$host$request_uri;\\n }\\n  \\n server {\\n     listen 443 ssl http2;  \\n     server_name test1234.instar.co.uk;\\n \\n     # SSL Configuration\\n     ssl_certificate /etc/letsencrypt/live/test1234.instar.co.uk/fullchain.pem;\\n     ssl_certificate_key /etc/letsencrypt/live/test1234.instar.co.uk/privkey.pem;\\n     include /etc/nginx/ssl.conf;\\n  \\n     # Reverse Proxy Configuration\\n     location / {\\n         proxy_pass http://test1234.instar.co.uk:7777/;\\n         proxy_set_header Host $http_host;\\n         proxy_http_version 1.1;\\n         proxy_set_header X-Forwarded-Proto $scheme;\\n         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\\n         proxy_redirect http://test1234.instar.co.uk:7777/ https://test1234.instar.co.uk;\\n     }\\n }\\n\")), mdx(\"p\", null, \"Now test the nginx configuration and make sure there is no error. Then restart the Nginx service.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"nginx -t\\nsystemctl restart nginx\\n\")), mdx(\"p\", null, \"Nginx installation and configuration as a reverse proxy for Discourse container has been completed. You can now access your Discourse Forum through the domain that is managed by NGINX.\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Download Discourse from Github Configure Discourse Set Mail Credentials Set Domain Optional: Tune Memory Settings Bootstrap Discourse Access…","frontmatter":{"title":"Install and Configure Nginx as a Reverse Proxy for Discourse","date":"06/16/2019","categories":["Linux","Docker","NGINX"]},"timeToRead":2,"parent":{"__typename":"File","mtime":"2019-10-28T15:42:20.854Z","birthtime":"2019-10-28T14:13:33.030Z"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/install-and-configure-nginx-as-a-reverse-proxy-for-discourse","prev":{"fields":{"slug":"/installing-discourse-on-centos-8"},"frontmatter":{"title":"Installing Discourse on Centos 8","categories":["Linux","Docker"]}},"next":null}}}