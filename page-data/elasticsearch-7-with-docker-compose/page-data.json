{"componentChunkName":"component---src-templates-post-jsx","path":"/elasticsearch-7-with-docker-compose","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"date\": \"2019-09-08\",\n  \"title\": \"Elasticsearch 7 with Docker Compose\",\n  \"categories\": [\"Docker\", \"Elasticsearch\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"span\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"gatsby-resp-image-wrapper\",\n    \"style\": {\n      \"position\": \"relative\",\n      \"display\": \"block\",\n      \"marginLeft\": \"auto\",\n      \"marginRight\": \"auto\",\n      \"maxWidth\": \"1024px\"\n    }\n  }), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-resp-image-background-image\",\n    \"style\": {\n      \"paddingBottom\": \"35.46666666666667%\",\n      \"position\": \"relative\",\n      \"bottom\": \"0\",\n      \"left\": \"0\",\n      \"backgroundSize\": \"cover\",\n      \"display\": \"block\"\n    }\n  })), \"\\n    \", mdx(\"picture\", {\n    parentName: \"span\"\n  }, \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/fdf3ffad17a43c5bfcf750fac490bc0d/8d3d1/photo-kt456d_645dhfh6dgjkhg4_d.webp 256w\", \"/static/fdf3ffad17a43c5bfcf750fac490bc0d/354cf/photo-kt456d_645dhfh6dgjkhg4_d.webp 512w\", \"/static/fdf3ffad17a43c5bfcf750fac490bc0d/44907/photo-kt456d_645dhfh6dgjkhg4_d.webp 1024w\", \"/static/fdf3ffad17a43c5bfcf750fac490bc0d/9579c/photo-kt456d_645dhfh6dgjkhg4_d.webp 1500w\"],\n    \"sizes\": \"(max-width: 1024px) 100vw, 1024px\",\n    \"type\": \"image/webp\"\n  })), \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/fdf3ffad17a43c5bfcf750fac490bc0d/b95e4/photo-kt456d_645dhfh6dgjkhg4_d.jpg 256w\", \"/static/fdf3ffad17a43c5bfcf750fac490bc0d/1779b/photo-kt456d_645dhfh6dgjkhg4_d.jpg 512w\", \"/static/fdf3ffad17a43c5bfcf750fac490bc0d/87945/photo-kt456d_645dhfh6dgjkhg4_d.jpg 1024w\", \"/static/fdf3ffad17a43c5bfcf750fac490bc0d/9d81f/photo-kt456d_645dhfh6dgjkhg4_d.jpg 1500w\"],\n    \"sizes\": \"(max-width: 1024px) 100vw, 1024px\",\n    \"type\": \"image/jpeg\"\n  })), \"\\n        \", mdx(\"img\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"className\": \"gatsby-resp-image-image\",\n    \"style\": {\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"margin\": \"0\",\n      \"verticalAlign\": \"middle\",\n      \"position\": \"absolute\",\n      \"top\": \"0\",\n      \"left\": \"0\",\n      \"boxShadow\": \"inset 0px 0px 0px 400px white\"\n    },\n    \"src\": \"/static/fdf3ffad17a43c5bfcf750fac490bc0d/87945/photo-kt456d_645dhfh6dgjkhg4_d.jpg\",\n    \"alt\": \"ShenZhen, China\",\n    \"title\": \"\"\n  })), \"\\n      \"), \"\\n  \")), mdx(\"p\", null, \"Let's run a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Elasticsearch 7.5\"), \" as a single node cluster using Docker Compose with XPack disabled. To run the Elasticsearch 7 Docker image as a single node, you have to set \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"discovery.type\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"single-node\"), \". At startup, the bootstrap checks are bypassed. The single node will elect itself as the master node and will not join a cluster with any other node.\"), mdx(\"p\", null, \"A complete docker-compose.yml example to run a single node Elasticsearch 7 Cluster including Kibana:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"version: '3.7'\\n\\nservices:\\n\\n  # Elasticsearch Docker Images: https://www.docker.elastic.co/\\n  elasticsearch:\\n    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.0\\n    container_name: elasticsearch\\n    environment:\\n      - xpack.security.enabled=false\\n      - discovery.type=single-node\\n    ulimits:\\n      memlock:\\n        soft: -1\\n        hard: -1\\n      nofile:\\n        soft: 65536\\n        hard: 65536\\n    cap_add:\\n      - IPC_LOCK\\n    volumes:\\n      - elasticsearch-data:/usr/share/elasticsearch/data\\n    ports:\\n      - 9200:9200\\n      - 9300:9300\\n\\n  kibana:\\n    container_name: kibana\\n    image: docker.elastic.co/kibana/kibana:7.5.0\\n    environment:\\n      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200\\n    ports:\\n      - 5601:5601\\n    depends_on:\\n      - elasticsearch\\n\\nvolumes:\\n  elasticsearch-data:\\n    driver: local\\n\")), mdx(\"p\", null, \"Start Elasticsearch and Kibana using Docker Compose:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"docker-compose up -d\\n\")), mdx(\"p\", null, \"Your Elasticsearch node will startup now, and after a couple of seconds, you can reach it at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://localhost:9200/\"), \". Kibana should be running at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://localhost:5601\"), \" now. To shut down Elasticsearch and Kibana run:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"docker-compose down\\n\")), mdx(\"p\", null, \"In case you also would like to remove the docker volume while shutting down run:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"docker-compose down -v\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Let's run a  Elasticsearch 7.5  as a single node cluster using Docker Compose with XPack disabled. To run the Elasticsearch 7 Docker imageâ€¦","frontmatter":{"title":"Elasticsearch 7 with Docker Compose","date":"09/08/2019","categories":["Docker","Elasticsearch"]},"timeToRead":1,"parent":{"__typename":"File","mtime":"2019-12-16T11:31:07.918Z","birthtime":"2019-12-16T10:38:32.575Z"}}},"pageContext":{"slug":"/elasticsearch-7-with-docker-compose","prev":{"fields":{"slug":"/magento-2-docker-development"},"frontmatter":{"title":"Magento 2 Docker Development","categories":["Docker"]}},"next":{"fields":{"slug":"/magento-2-installation-with-nginx-on-debian-buster"},"frontmatter":{"title":"Magento 2 Installation with NGINX on Debian Buster","categories":["NGINX","LINUX","Magento"]}}}}}