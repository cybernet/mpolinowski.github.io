{"componentChunkName":"component---src-templates-post-js","path":"/red-hat-open-shift-3-container-platform","webpackCompilationHash":"46b723137755ac1fff0f","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"date\": \"2019-03-02\",\n  \"title\": \"Red Hat OpenShift 3 Container Platform\",\n  \"categories\": [\"LINUX\", \"Docker\", \"OpenShift\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"span\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"gatsby-resp-image-wrapper\",\n    \"style\": {\n      \"position\": \"relative\",\n      \"display\": \"block\",\n      \"marginLeft\": \"auto\",\n      \"marginRight\": \"auto\",\n      \"maxWidth\": \"1024px\"\n    }\n  }), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-resp-image-background-image\",\n    \"style\": {\n      \"paddingBottom\": \"31.733333333333334%\",\n      \"position\": \"relative\",\n      \"bottom\": \"0px\",\n      \"left\": \"0px\",\n      \"backgroundSize\": \"cover\",\n      \"display\": \"block\"\n    }\n  })), \"\\n    \", mdx(\"picture\", {\n    parentName: \"span\"\n  }, \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/fa7c6d1645f5c0029b21196a30335f0f/a9925/photo-8752545756_67fhcdfdj_o.webp 256w\", \"/static/fa7c6d1645f5c0029b21196a30335f0f/5406f/photo-8752545756_67fhcdfdj_o.webp 512w\", \"/static/fa7c6d1645f5c0029b21196a30335f0f/ae385/photo-8752545756_67fhcdfdj_o.webp 1024w\", \"/static/fa7c6d1645f5c0029b21196a30335f0f/2cd02/photo-8752545756_67fhcdfdj_o.webp 1500w\"],\n    \"sizes\": \"(max-width: 1024px) 100vw, 1024px\",\n    \"type\": \"image/webp\"\n  })), \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/fa7c6d1645f5c0029b21196a30335f0f/68367/photo-8752545756_67fhcdfdj_o.jpg 256w\", \"/static/fa7c6d1645f5c0029b21196a30335f0f/d763f/photo-8752545756_67fhcdfdj_o.jpg 512w\", \"/static/fa7c6d1645f5c0029b21196a30335f0f/4c7b4/photo-8752545756_67fhcdfdj_o.jpg 1024w\", \"/static/fa7c6d1645f5c0029b21196a30335f0f/56304/photo-8752545756_67fhcdfdj_o.jpg 1500w\"],\n    \"sizes\": \"(max-width: 1024px) 100vw, 1024px\",\n    \"type\": \"image/jpeg\"\n  })), \"\\n        \", mdx(\"img\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"className\": \"gatsby-resp-image-image\",\n    \"style\": {\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"margin\": \"0px\",\n      \"verticalAlign\": \"middle\",\n      \"position\": \"absolute\",\n      \"top\": \"0px\",\n      \"left\": \"0px\",\n      \"boxShadow\": \"inset 0px 0px 0px 400px white\"\n    },\n    \"src\": \"/static/fa7c6d1645f5c0029b21196a30335f0f/4c7b4/photo-8752545756_67fhcdfdj_o.jpg\",\n    \"alt\": \"Harbin, China\",\n    \"title\": \"\"\n  })), \"\\n      \"), \"\\n  \")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#installation\"\n  }), \"Installation\"))), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.okd.io\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"OKD\"), \" is a distribution of Kubernetes optimized for continuous application development and multi-tenant deployment. OKD adds developer and operations-centric tools on top of Kubernetes to enable rapid application development, easy deployment and scaling, and long-term lifecycle maintenance for small and large teams. OKD is the upstream Kubernetes distribution embedded in Red Hat OpenShift.\"), mdx(\"p\", null, \"OKD embeds Kubernetes and extends it with security and other integrated concepts. OKD is also referred to as \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/openshift/origin\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"Origin in github\"), \" and in the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.okd.io/latest/welcome/index.html\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"documentation\"), \". An OKD release corresponds to the Kubernetes distribution - for example, OKD 1.10 includes Kubernetes 1.10.\"), mdx(\"h2\", {\n    \"id\": \"installation\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#installation\",\n    \"aria-label\": \"installation permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Installation\"), mdx(\"p\", null, \"Let's start with the prerequisites:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"yum update\\nyum install -y git docker net-tools\\n\")), mdx(\"p\", null, \"We can now use the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gshipley/installcentos\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"install script\"), \" by \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gshipley/\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"Grant Shipley\"), \" to set up RedHat OKD 3.11 on your own server. This install method is targeted for a single node cluster that has a long life.\"), mdx(\"p\", null, \"This repository is a set of scripts that will allow you easily install the latest version (3.11) of OKD in a single node fashion. What that means is that all of the services required for OKD to function (master, node, etcd, etc.) will all be installed on a single host. The script supports a custom hostname which you can provide using the interactive mode.\"), mdx(\"p\", null, \"We will start by cloning the repository:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"git clone https://github.com/gshipley/installcentos.git\\ncd installcentos\\n\")), mdx(\"p\", null, \"Define mandatory variables for the installation process:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"# Domain name to access the cluster\\nexport DOMAIN=<public ip address>.nip.io\\n\\n# User created after installation\\nexport USERNAME=<current user name>\\n\\n# Password for the user\\nexport PASSWORD=password\\n\")), mdx(\"p\", null, \"Define optional variables for the installation process:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"# Instead of using loopback, setup DeviceMapper on this disk.\\n# !! All data on the disk will be wiped out !!\\n$ export DISK=\\\"/dev/sda\\\"\\n\")), mdx(\"p\", null, \"And then execute the installation script:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"./install-openshift.sh\\n\")), mdx(\"p\", null, mdx(\"span\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"gatsby-resp-image-wrapper\",\n    \"style\": {\n      \"position\": \"relative\",\n      \"display\": \"block\",\n      \"marginLeft\": \"auto\",\n      \"marginRight\": \"auto\",\n      \"maxWidth\": \"927px\"\n    }\n  }), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-resp-image-background-image\",\n    \"style\": {\n      \"paddingBottom\": \"62.56742179072277%\",\n      \"position\": \"relative\",\n      \"bottom\": \"0px\",\n      \"left\": \"0px\",\n      \"backgroundSize\": \"cover\",\n      \"display\": \"block\"\n    }\n  })), \"\\n    \", mdx(\"picture\", {\n    parentName: \"span\"\n  }, \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/945b7df25a0342f6f1c1fd056301b9a0/a9925/openshift_01.webp 256w\", \"/static/945b7df25a0342f6f1c1fd056301b9a0/5406f/openshift_01.webp 512w\", \"/static/945b7df25a0342f6f1c1fd056301b9a0/01590/openshift_01.webp 927w\"],\n    \"sizes\": \"(max-width: 927px) 100vw, 927px\",\n    \"type\": \"image/webp\"\n  })), \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/945b7df25a0342f6f1c1fd056301b9a0/2c438/openshift_01.png 256w\", \"/static/945b7df25a0342f6f1c1fd056301b9a0/53eb4/openshift_01.png 512w\", \"/static/945b7df25a0342f6f1c1fd056301b9a0/3f6ed/openshift_01.png 927w\"],\n    \"sizes\": \"(max-width: 927px) 100vw, 927px\",\n    \"type\": \"image/png\"\n  })), \"\\n        \", mdx(\"img\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"className\": \"gatsby-resp-image-image\",\n    \"style\": {\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"margin\": \"0px\",\n      \"verticalAlign\": \"middle\",\n      \"position\": \"absolute\",\n      \"top\": \"0px\",\n      \"left\": \"0px\",\n      \"boxShadow\": \"inset 0px 0px 0px 400px white\"\n    },\n    \"src\": \"/static/945b7df25a0342f6f1c1fd056301b9a0/3f6ed/openshift_01.png\",\n    \"alt\": \"Openshift 3.11\",\n    \"title\": \"\"\n  })), \"\\n      \"), \"\\n  \")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Installation OKD  is a distribution of Kubernetes optimized for continuous application development and multi-tenant deployment. OKD adds…","frontmatter":{"title":"Red Hat OpenShift 3 Container Platform","date":"03/02/2019","categories":["LINUX","Docker","OpenShift"]},"timeToRead":1,"parent":{"__typename":"File","mtime":"2019-07-07T14:34:32.379Z","birthtime":"2019-07-07T14:31:19.106Z"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/red-hat-open-shift-3-container-platform","prev":{"fields":{"slug":"/nginx-ingress-with-cert-manager"},"frontmatter":{"title":"NGINX Ingress with Cert-Manager","categories":["LINUX","Docker","Kubernetes","NGINX"]}},"next":{"fields":{"slug":"/setting-up-an-okd-cluster"},"frontmatter":{"title":"Setting up an OKD Cluster","categories":["LINUX","Docker","OpenShift"]}}}}}