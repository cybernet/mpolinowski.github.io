{"componentChunkName":"component---src-templates-post-jsx","path":"/react-transition-group","webpackCompilationHash":"df9cc34efc6af264aa6a","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"date\": \"2018-01-15\",\n  \"title\": \"react-transition-group\",\n  \"categories\": [\"Javascript\", \"React\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"span\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"gatsby-resp-image-wrapper\",\n    \"style\": {\n      \"position\": \"relative\",\n      \"display\": \"block\",\n      \"marginLeft\": \"auto\",\n      \"marginRight\": \"auto\",\n      \"maxWidth\": \"1024px\"\n    }\n  }), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-resp-image-background-image\",\n    \"style\": {\n      \"paddingBottom\": \"38.86666666666667%\",\n      \"position\": \"relative\",\n      \"bottom\": \"0px\",\n      \"left\": \"0px\",\n      \"backgroundSize\": \"cover\",\n      \"display\": \"block\"\n    }\n  })), \"\\n    \", mdx(\"picture\", {\n    parentName: \"span\"\n  }, \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/6e6c3df16f77377e1e860f420ad5ea98/a9925/photo-11628005984_73bc506457_o.webp 256w\", \"/static/6e6c3df16f77377e1e860f420ad5ea98/5406f/photo-11628005984_73bc506457_o.webp 512w\", \"/static/6e6c3df16f77377e1e860f420ad5ea98/ae385/photo-11628005984_73bc506457_o.webp 1024w\", \"/static/6e6c3df16f77377e1e860f420ad5ea98/2cd02/photo-11628005984_73bc506457_o.webp 1500w\"],\n    \"sizes\": \"(max-width: 1024px) 100vw, 1024px\",\n    \"type\": \"image/webp\"\n  })), \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/6e6c3df16f77377e1e860f420ad5ea98/2c438/photo-11628005984_73bc506457_o.png 256w\", \"/static/6e6c3df16f77377e1e860f420ad5ea98/53eb4/photo-11628005984_73bc506457_o.png 512w\", \"/static/6e6c3df16f77377e1e860f420ad5ea98/e0e05/photo-11628005984_73bc506457_o.png 1024w\", \"/static/6e6c3df16f77377e1e860f420ad5ea98/10439/photo-11628005984_73bc506457_o.png 1500w\"],\n    \"sizes\": \"(max-width: 1024px) 100vw, 1024px\",\n    \"type\": \"image/png\"\n  })), \"\\n        \", mdx(\"img\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"className\": \"gatsby-resp-image-image\",\n    \"style\": {\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"margin\": \"0px\",\n      \"verticalAlign\": \"middle\",\n      \"position\": \"absolute\",\n      \"top\": \"0px\",\n      \"left\": \"0px\",\n      \"boxShadow\": \"inset 0px 0px 0px 400px white\"\n    },\n    \"src\": \"/static/6e6c3df16f77377e1e860f420ad5ea98/e0e05/photo-11628005984_73bc506457_o.png\",\n    \"alt\": \"Angkor Wat, Cambodia\",\n    \"title\": \"\"\n  })), \"\\n      \"), \"\\n  \")), mdx(\"h2\", {\n    \"id\": \"introduction-to-animated-transitions-with-react-router\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#introduction-to-animated-transitions-with-react-router\",\n    \"aria-label\": \"introduction to animated transitions with react router permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Introduction to animated transitions with React Router\"), mdx(\"p\", null, \"It is using the official \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://reacttraining.com/react-router/web/example/animated-transitions\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"React Router documentation\"), \" and employs the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://reactcommunity.org/react-transition-group/\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"react-transition-group\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#introduction-to-animated-transitions-with-react-router\"\n  }), \"Introduction to animated transitions with React Router\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#create-react-app\"\n  }), \"create-react-app\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#react-router\"\n  }), \"React Router\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#page-components--url-parameters\"\n  }), \"Page Components & URL parameters\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#using-switch-to-catch-404s\"\n  }), \"Using Switch to catch 404's\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#adding-transitions-to-routes\"\n  }), \"Adding Transitions to Routes\"))))), mdx(\"h3\", {\n    \"id\": \"create-react-app\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#create-react-app\",\n    \"aria-label\": \"create react app permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"create-react-app\"), mdx(\"p\", null, \"Lets get started with a React skeleton app. Navigate to a sensible directory and type the following into your Terminal (you need to have \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://nodejs.org\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"Node.js\"), \" version 6+ with npm version 5.2+ installed globally):\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"npx create-react-app react-transition-group-demo\\ncd react-transition-group-demo\\n\")), mdx(\"p\", null, \"As we already stated, we are going to use React Router and the React Transition group for our app. Lets install those as well:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"npm install react-router-dom react-transition-group\\n\")), mdx(\"p\", null, \"Now open the app root inside your code editor and navigate to ./src/app.js and delete everything.\"), mdx(\"h3\", {\n    \"id\": \"react-router\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#react-router\",\n    \"aria-label\": \"react router permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"React Router\"), mdx(\"p\", null, \"First we need to import React and React Router:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import React, { Component } from 'react'\\nimport {\\n  BrowserRouter as Router,\\n  Link,\\n  Route, // for later\\n  Redirect, // for later\\n  Switch, // for later\\n} from 'react-router-dom'\\n\")), mdx(\"p\", null, \"Build a Nav component using the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"router\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"class App extends Component {\\n  render() {\\n    return (\\n      <Router>\\n        <div style={styles.fill}>\\n          <ul style={styles.nav}>\\n            <NavLink to=\\\"/hsl/355/87/53\\\">Crimson</NavLink>\\n            <NavLink to=\\\"/hsl/210/5/15\\\">Darkslategray</NavLink>\\n            <NavLink to=\\\"/rgb/28/221/105\\\">Springgreen</NavLink>\\n            <NavLink to=\\\"/rgb/43/29/201\\\">Mediumblue</NavLink>\\n          </ul>\\n        </div>\\n      </Router>\\n    )\\n  }\\n}\\n\\nconst NavLink = (props) => (\\n  <li style={styles.navItem}>\\n    <Link {...props} style={{ color: 'inherit' }} />\\n  </li>\\n)\\n\\nexport default App\\n\")), mdx(\"p\", null, \"And make it look pretty with some \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"CSS-in-JS\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"let styles = {}\\nstyles.fill = {\\n  position: 'absolute',\\n  left: 0,\\n  right: 0,\\n  top: 0,\\n  bottom: 0\\n}\\nstyles.nav = {\\n  padding: 0,\\n  margin: 0,\\n  position: 'absolute',\\n  top: 0,\\n  height: '40px',\\n  width: '100%',\\n  display: 'flex'\\n}\\nstyles.navItem = {\\n  textAlign: 'center',\\n  flex: 1,\\n  listStyleType: 'none',\\n  padding: '10px'\\n}\\n\")), mdx(\"p\", null, \"You can now start the app and open it in your browser on \", mdx(\"em\", {\n    parentName: \"p\"\n  }, mdx(\"a\", _extends({\n    parentName: \"em\"\n  }, {\n    \"href\": \"http://localhost:3000\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"http://localhost:3000\"))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"npm start\\n\")), mdx(\"p\", null, mdx(\"span\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"gatsby-resp-image-wrapper\",\n    \"style\": {\n      \"position\": \"relative\",\n      \"display\": \"block\",\n      \"marginLeft\": \"auto\",\n      \"marginRight\": \"auto\",\n      \"maxWidth\": \"1024px\"\n    }\n  }), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-resp-image-background-image\",\n    \"style\": {\n      \"paddingBottom\": \"14.083259521700619%\",\n      \"position\": \"relative\",\n      \"bottom\": \"0px\",\n      \"left\": \"0px\",\n      \"backgroundSize\": \"cover\",\n      \"display\": \"block\"\n    }\n  })), \"\\n    \", mdx(\"picture\", {\n    parentName: \"span\"\n  }, \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/e026a086fec6c41b9aa00a370607a716/a9925/rtg_01.webp 256w\", \"/static/e026a086fec6c41b9aa00a370607a716/5406f/rtg_01.webp 512w\", \"/static/e026a086fec6c41b9aa00a370607a716/ae385/rtg_01.webp 1024w\", \"/static/e026a086fec6c41b9aa00a370607a716/50554/rtg_01.webp 1129w\"],\n    \"sizes\": \"(max-width: 1024px) 100vw, 1024px\",\n    \"type\": \"image/webp\"\n  })), \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/e026a086fec6c41b9aa00a370607a716/2c438/rtg_01.png 256w\", \"/static/e026a086fec6c41b9aa00a370607a716/53eb4/rtg_01.png 512w\", \"/static/e026a086fec6c41b9aa00a370607a716/e0e05/rtg_01.png 1024w\", \"/static/e026a086fec6c41b9aa00a370607a716/50acd/rtg_01.png 1129w\"],\n    \"sizes\": \"(max-width: 1024px) 100vw, 1024px\",\n    \"type\": \"image/png\"\n  })), \"\\n        \", mdx(\"img\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"className\": \"gatsby-resp-image-image\",\n    \"style\": {\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"margin\": \"0px\",\n      \"verticalAlign\": \"middle\",\n      \"position\": \"absolute\",\n      \"top\": \"0px\",\n      \"left\": \"0px\",\n      \"boxShadow\": \"inset 0px 0px 0px 400px white\"\n    },\n    \"src\": \"/static/e026a086fec6c41b9aa00a370607a716/e0e05/rtg_01.png\",\n    \"alt\": \"react-transition-group demo app\",\n    \"title\": \"\"\n  })), \"\\n      \"), \"\\n  \")), mdx(\"p\", null, \"We now have 4 links on to of the page that lead to a hsl and a rgb component (that we still have to build). And the routes carry \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"URL parameters\"), \" in form of HSL or RGB values that we will use inside those components to render the background in the specific colour, defined by those values - \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/rgb/:r/:g/:b\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/hsl/:h/:s/:l\"), \".\"), mdx(\"h3\", {\n    \"id\": \"page-components--url-parameters\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#page-components--url-parameters\",\n    \"aria-label\": \"page components  url parameters permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Page Components & URL parameters\"), mdx(\"p\", null, \"Lets build those 2 components by adding them to the ./src/app.js file:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"RGB\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"...\\n\\nconst RGB = ({ match }) => {\\n  const { params } = match\\n  return (\\n    <div style={{\\n      ...styles.rgb,\\n      background: `rgb(${params.r}, ${params.g}, ${params.b})`\\n    }}>rgb({params.r}, {params.g}, {params.b})</div>\\n  )\\n}\\n\\n...\\n\\nstyles.rgb  = {\\n  ...styles.fill,\\n  color: 'white',\\n  paddingTop: '20px',\\n  fontSize: '30px'\\n}\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"HSL\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"...\\n\\nconst HSL = ({ match }) => {\\n  const { params } = match\\n  return (\\n    <div style={{\\n      ...styles.hsl,\\n      background: `hsl(${params.h}, ${params.s}%, ${params.l}%)`\\n    }}>hsl({params.h}, {params.s}%, {params.l}%)</div>\\n  )\\n}\\n\\n...\\n\\nstyles.hsl  = {\\n  ...styles.fill,\\n  color: 'white',\\n  paddingTop: '20px',\\n  fontSize: '30px'\\n}\\n\")), mdx(\"p\", null, \"Both components receive a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"match\"), \" object from which we can grab our URL parameters from. We want them to use the URL parameters change the background of the component. And show us the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"hsl({params.h}, {params.s}%, {params.l}%)\"), \" values that were used.\"), mdx(\"h3\", {\n    \"id\": \"using-switch-to-catch-404s\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#using-switch-to-catch-404s\",\n    \"aria-label\": \"using switch to catch 404s permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Using Switch to catch 404's\"), mdx(\"p\", null, \"Now we need is a way to tell React Router that we only want to render the first Route that matches, even if there's more than one match. All we need to do is wrap our Routes inside of a Switch then just as we wanted, only the first match will ever be rendered. To prevent the 404 Error to pop up on our our home route, we can add a simple Index component to the mix.\"), mdx(\"p\", null, \"An alternative would be to use the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Redirect\"), \" function in React Router, to redirect unknown URLs to a specific site - we use a Home route - that doesn't have a component assigned to it - in our example below:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"...\\n\\n<div style={styles.content}>\\n  <Switch>\\n    <Route\\n      exact\\n      path=\\\"/hsl/:h/:s/:l\\\"\\n      component={HSL}\\n    />\\n    <Route\\n      exact\\n      path=\\\"/rgb/:r/:g/:b\\\"\\n      component={RGB}\\n    />\\n    <Route exact path=\\\"/home\\\" render={() => (\\n      <Redirect to=\\\"/\\\" />\\n    )} />\\n    <Route exact path=\\\"/\\\" component={Index} />\\n    <Route render={() => <div>Not Found</div>} />\\n  </Switch>\\n</div>\\n\\n...\\n\\nconst Index = () => (\\n  <div style={styles.index}>\\n    <h1>Hello World</h1>\\n    <p>Click a link to generate a coloured background.</p>\\n  </div>\\n)\\n...\\n\\nstyles.index = {\\n  ...styles.fill,\\n  marginTop: '7%',\\n  textAlign: 'center'\\n}\\nstyles.content = {\\n  ...styles.fill,\\n  top: '40px',\\n  textAlign: 'center'\\n}\\n\")), mdx(\"p\", null, \"Only if a route matching the exact path defined for the HSL or RGB component, the selected component will be rendered. Otherwise the request will fall through to the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"catch-all\"), \" route - our simple 404 component.\"), mdx(\"p\", null, \"The complete router component now looks like this:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Router>\\n\\n  <div style={styles.fill}>\\n  \\n    <ul style={styles.nav}>\\n      <NavLink to=\\\"/home\\\">Home</NavLink>\\n      <NavLink to=\\\"/hsl/355/87/53\\\">Crimson</NavLink>\\n      <NavLink to=\\\"/hsl/210/5/15\\\">Darkslategray</NavLink>\\n      <NavLink to=\\\"/rgb/28/221/105\\\">Springgreen</NavLink>\\n      <NavLink to=\\\"/rgb/43/29/201\\\">Mediumblue</NavLink>\\n    </ul>\\n\\n    <div style={styles.content}>\\n      <Switch>\\n        <Route\\n          exact\\n          path=\\\"/hsl/:h/:s/:l\\\"\\n          component={HSL}\\n        />\\n        <Route\\n          exact\\n          path=\\\"/rgb/:r/:g/:b\\\"\\n          component={RGB}\\n        />\\n        <Route exact path=\\\"/home\\\" render={() => (\\n          <Redirect to=\\\"/\\\" />\\n        )} />\\n        <Route exact path=\\\"/\\\" component={Index} />\\n        <Route render={() => <div>Not Found</div>} />\\n    </div>\\n\\n  </div>\\n\\n</Router>\\n\")), mdx(\"h3\", {\n    \"id\": \"adding-transitions-to-routes\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#adding-transitions-to-routes\",\n    \"aria-label\": \"adding transitions to routes permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Adding Transitions to Routes\"), mdx(\"p\", null, \"To use the react-transition-group, we first have to import transitions into our project:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import {\\n  TransitionGroup,\\n  CSSTransition\\n} from 'react-transition-group'\\n\")), mdx(\"p\", null, \"The TransitionGroup is a wrapper component, that keeps track of all it's children that are new and old and applies state to them. The CSSTransition then applies CSS classes to them - e.g. to fade-in new components / fade-out old components. To animate the transition of going from one URL to another, we have to wrap our \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Switch\"), \" component inside a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"TransitionGroup\"), \" + \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"CSSTransition\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<div style={styles.content}>\\n  <TransitionGroup>\\n    <CSSTransition\\n      timeout='300'\\n      classNames='fade'>\\n      <Switch>\\n        <Route exact path=\\\"/\\\" component={Index} />\\n        <Route exact path=\\\"/home\\\" render={() => (\\n          <Redirect to=\\\"/\\\" />\\n        )} />\\n        <Route exact path=\\\"/hsl/:h/:s/:l\\\" component={HSL} />\\n        <Route exact path=\\\"/rgb/:r/:g/:b\\\" component={RGB} />\\n        <Route render={() => <div>Not Found</div>} />\\n      </Switch>\\n    </CSSTransition>\\n  </TransitionGroup>\\n</div>\\n\")), mdx(\"p\", null, \"We are applying a 300ms time frame to the CSS transition and use a classname \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"fade\"), \" for the fade-in effect. We import the styles from ./styles/index.css:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-css\"\n  }), \".fade-enter {\\n  opacity: 0;\\n  z-index: 1;\\n}\\n\\n.fade-enter.fade-enter-active {\\n  opacity: 1;\\n  transition: opacity 250 ms ease-in;\\n}\\n\")), mdx(\"p\", null, \"To get a unique key from every component being rendered, we can wrap everything inside a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Route\"), \" and get the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"location\"), \" prop (that comes with a location.key) from it:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Router>\\n  <Route render={({ location }) => (\\n    <div style={styles.fill}>\\n      <ul style={styles.nav}>\\n        <NavLink to=\\\"/home\\\">Home</NavLink>\\n        <NavLink to=\\\"/hsl/355/87/53\\\">Crimson</NavLink>\\n        <NavLink to=\\\"/hsl/210/5/15\\\">Darkslategray</NavLink>\\n        <NavLink to=\\\"/rgb/28/221/105\\\">Springgreen</NavLink>\\n        <NavLink to=\\\"/rgb/43/29/201\\\">Mediumblue</NavLink>\\n      </ul>\\n      <div style={styles.content}>\\n        <TransitionGroup>\\n          <CSSTransition\\n            key={location.key}\\n            timeout={300}\\n            classNames='fade'\\n          >\\n            <Switch location={location}>\\n              <Route\\n                exact\\n                path=\\\"/hsl/:h/:s/:l\\\"\\n                component={HSL}\\n              />\\n              <Route\\n                exact\\n                path=\\\"/rgb/:r/:g/:b\\\"\\n                component={RGB}\\n              />\\n              <Route exact path=\\\"/home\\\" render={() => (\\n                <Redirect to=\\\"/\\\" />\\n              )} />\\n              <Route exact path=\\\"/\\\" component={Index} />\\n              <Route render={() => <div>Not Found</div>} />\\n            </Switch>\\n          </CSSTransition>\\n        </TransitionGroup>\\n      </div>\\n    </div>\\n  )} />\\n</Router>\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Remember\"), \" to also add the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"location\"), \" prop to the switch component!\"), mdx(GifContainer, {\n    gifUrl: \"/assets/gif/rtg_03.gif\",\n    alt: \"React Password Generator\",\n    mdxType: \"GifContainer\"\n  }), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://tylermcginnis.com/react-router-url-parameters/\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"https://tylermcginnis.com/react-router-url-parameters/\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://hackernoon.com/animated-page-transitions-with-react-router-4-reacttransitiongroup-and-animated-1ca17bd97a1a\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"https://hackernoon.com/animated-page-transitions-with-react-router-4-reacttransitiongroup-and-animated-1ca17bd97a1a\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Introduction to animated transitions with React Router It is using the official  React Router documentation  and employs the  react…","frontmatter":{"title":"react-transition-group","date":"01/15/2018","categories":["Javascript","React"]},"timeToRead":2,"parent":{"__typename":"File","mtime":"2019-07-11T13:54:24.279Z","birthtime":"2019-07-07T12:16:02.055Z"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/react-transition-group","prev":{"fields":{"slug":"/gatsby-material-ui-starter"},"frontmatter":{"title":"Gatsby Material UI Starter","categories":["Javascript","React","Gatsby","Material-UI"]}},"next":{"fields":{"slug":"/server-rendering-with-react-and-react-router"},"frontmatter":{"title":"Server Rendering with React and React Router","categories":["Javascript","React"]}}}}}