{"componentChunkName":"component---src-templates-post-jsx","path":"/salt-pillars-formulas","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"date\": \"2020-06-17\",\n  \"title\": \"Salt Pillars & Formulas\",\n  \"categories\": [\"LINUX\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"span\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"gatsby-resp-image-wrapper\",\n    \"style\": {\n      \"position\": \"relative\",\n      \"display\": \"block\",\n      \"marginLeft\": \"auto\",\n      \"marginRight\": \"auto\",\n      \"maxWidth\": \"1024px\"\n    }\n  }), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-resp-image-background-image\",\n    \"style\": {\n      \"paddingBottom\": \"41.40625%\",\n      \"position\": \"relative\",\n      \"bottom\": \"0\",\n      \"left\": \"0\",\n      \"backgroundSize\": \"cover\",\n      \"display\": \"block\"\n    }\n  })), \"\\n    \", mdx(\"picture\", {\n    parentName: \"span\"\n  }, \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/d85303eb43718a7c675de772c005e580/8d3d1/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d.webp 256w\", \"/static/d85303eb43718a7c675de772c005e580/354cf/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d.webp 512w\", \"/static/d85303eb43718a7c675de772c005e580/44907/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d.webp 1024w\", \"/static/d85303eb43718a7c675de772c005e580/9579c/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d.webp 1500w\"],\n    \"sizes\": \"(max-width: 1024px) 100vw, 1024px\",\n    \"type\": \"image/webp\"\n  })), \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/d85303eb43718a7c675de772c005e580/b95e4/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d.jpg 256w\", \"/static/d85303eb43718a7c675de772c005e580/1779b/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d.jpg 512w\", \"/static/d85303eb43718a7c675de772c005e580/87945/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d.jpg 1024w\", \"/static/d85303eb43718a7c675de772c005e580/9d81f/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d.jpg 1500w\"],\n    \"sizes\": \"(max-width: 1024px) 100vw, 1024px\",\n    \"type\": \"image/jpeg\"\n  })), \"\\n        \", mdx(\"img\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"className\": \"gatsby-resp-image-image\",\n    \"style\": {\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"margin\": \"0\",\n      \"verticalAlign\": \"middle\",\n      \"position\": \"absolute\",\n      \"top\": \"0\",\n      \"left\": \"0\",\n      \"boxShadow\": \"inset 0px 0px 0px 400px white\"\n    },\n    \"src\": \"/static/d85303eb43718a7c675de772c005e580/87945/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d.jpg\",\n    \"alt\": \"Guangzhou, China\",\n    \"title\": \"\"\n  })), \"\\n      \"), \"\\n  \")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#working-with-secure-data\"\n  }), \"Working with Secure Data\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#working-with-formulas\"\n  }), \"Working with Formulas\"))), mdx(\"h2\", {\n    \"id\": \"working-with-pillars\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#working-with-pillars\",\n    \"aria-label\": \"working with pillars permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Working with Pillars\"), mdx(\"p\", null, \"Pillars in Salt is arbitrary, minion-specific data. There is a large volume of \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.saltstack.com/en/master/ref/pillar/all/index.html\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"Pillar Modules\"), \" available to pull this data into Salt from external sources.\"), mdx(\"p\", null, \"Instructions on how to pull this data in is stored in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"*.sls\"), \" files. Start by creating the directory \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/srv/pillar\"), \" and add the following files:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"top.sls\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"base:\\n  '*':\\n    - name\\n\")), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Top File\"), \" sets the permission - what minions have access to a specific file. In this case all minions will have access to the file \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"name.sls\"), \":\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"name.sls\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"{% if grains.os == 'Ubuntu' %}\\nname: Ubuntu Rocks\\n{% elif grains.os == 'Centos' %}\\nname: CentOS Rocks\\n{% endif %}\\n\")), mdx(\"p\", null, \"We can clean this up by using a dictionary:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"{% set lookup = {\\n  'Ubuntu': 'Ubuntu Rocks',\\n  'Centos': 'Centos Rocks'\\n} %}\\n\\n{% set name = lookup[grains.os] %}\\n\\nname: {{ name | json() }}\\n\")), mdx(\"p\", null, \"Or:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"{% set os = salt.grains.filter_by({\\n    'Ubuntu': {\\n        'name': 'Ubuntu Rocks'\\n    },\\n    'Centos': {\\n        'name': 'Centos Rocks'\\n    }\\n}) %}\\n\\nname: {{ os.name }}\\n\")), mdx(\"p\", null, \"Run the following command to update all minions:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"sudo salt '*' saltutil.refresh_pillar\\n\\nubuntuAsus:\\n    True\\n\")), mdx(\"p\", null, \"We can use this data for example in our Apache landing page (see previous tutorial):\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"welcome.sls\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"# Adding a blank front page\\n{% set name = salt.pillar.get('name') %}\\n\\ncheck_pillar_values:\\n  test.check_pillar:\\n    - present:\\n      - name\\n    - failhard: True\\n\\nwelcome_page:\\n  file.managed:\\n    - name: /var/www/html/index.html\\n    - contents: |\\n        <!doctype html>\\n        <body>\\n            <h1>{{ name }}.</h1>\\n        </body>\\n\")), mdx(\"p\", null, \"You should be able to see that you Minions have access to your pillars:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"sudo salt '*' pillar.items\\n\")), mdx(\"p\", null, \"And check that your front page was updated:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"sudo salt '*' state.sls apache.welcome\\n\")), mdx(\"p\", null, \"You can also manually set the value of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"name\"), \" - but this data will be send to all minions and is NOT PRIVATE:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"sudo salt '*' state.sls apache.welcome pillar='{name: Override}'\\n\")), mdx(\"h2\", {\n    \"id\": \"working-with-formulas\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#working-with-formulas\",\n    \"aria-label\": \"working with formulas permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Working with Formulas\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.saltstack.com/en/latest/topics/development/conventions/formulas.html\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"Formulas are pre-written Salt States\"), \". They are as open-ended as Salt States themselves and can be used for tasks such as installing a package, configuring, and starting a service, setting up users or permissions, and many other common tasks.\"), mdx(\"p\", null, \"All official Salt Formulas are found as separate Git repositories in the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/saltstack-formulas\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"\\\"saltstack-formulas\\\" organization on GitHub\"), \". They can be downloaded using the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.saltstack.com/en/master/ref/file_server/all/salt.fileserver.gitfs.html#module-salt.fileserver.gitfs\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"GIT Fileserver Backend\"), \". To be able to use Git you first have to uncomment it in your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/etc/salt/master\"), \" config. Or use a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"local.conf\"), \" in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/etc/salt/master.d/local.conf\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"fileserver_backend:\\n  - git\\n  - roots\\n\\ngitfs_remotes:\\n  - https://github.com/saltstack-formulas/memcached-formula\\n\")), mdx(\"p\", null, \"After adding your \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/saltstack-formulas\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"desired Formulas\"), \" restart the Salt master and use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cp.list_master\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cp.list_states\"), \" command to get a list of all available configuration files to make sure that \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"memcached\"), \" was successfully cloned from Github:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"sudo systemctl restart salt-master\\n\\nsudo salt ubuntuAsus cp.list_states\\nubuntuAsus:\\n    - apache\\n    - apache.map\\n    - apache.mods\\n    - apache.welcome\\n    - memcached\\n    - memcached.config\\n    - memcached.libmemcached\\n    - memcached.macros\\n    - memcached.python_memcached\\n    - memcached.uninstall\\n\")), mdx(\"p\", null, \"Continue installing the following package: \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"on CentOS\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm\\nyum install GitPython\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"on Ubuntu\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"sudo apt install python-git-doc\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Working with Secure Data Working with Formulas Working with Pillars Pillars in Salt is arbitrary, minion-specific data. There is a large…","frontmatter":{"title":"Salt Pillars & Formulas","date":"06/17/2020","categories":["LINUX"]},"timeToRead":1,"parent":{"__typename":"File","mtime":"2020-08-04T16:53:25.249Z","birthtime":"2020-08-04T07:00:24.470Z"}}},"pageContext":{"slug":"/salt-pillars-formulas","prev":{"fields":{"slug":"/salt-state"},"frontmatter":{"title":"Salt State","categories":["LINUX"]}},"next":null}},"staticQueryHashes":["2658404678"]}