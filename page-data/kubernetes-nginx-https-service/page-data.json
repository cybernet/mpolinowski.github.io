{"componentChunkName":"component---src-templates-post-jsx","path":"/kubernetes-nginx-https-service","webpackCompilationHash":"b221d49c4d9e366a4e78","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"date\": \"2019-01-21\",\n  \"title\": \"Kubernetes NGINX https Service\",\n  \"categories\": [\"LINUX\", \"Docker\", \"Kubernetes\", \"NGINX\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"span\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"gatsby-resp-image-wrapper\",\n    \"style\": {\n      \"position\": \"relative\",\n      \"display\": \"block\",\n      \"marginLeft\": \"auto\",\n      \"marginRight\": \"auto\",\n      \"maxWidth\": \"1024px\"\n    }\n  }), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-resp-image-background-image\",\n    \"style\": {\n      \"paddingBottom\": \"40.33333333333333%\",\n      \"position\": \"relative\",\n      \"bottom\": \"0\",\n      \"left\": \"0\",\n      \"backgroundSize\": \"cover\",\n      \"display\": \"block\"\n    }\n  })), \"\\n    \", mdx(\"picture\", {\n    parentName: \"span\"\n  }, \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/5de8d2aa7fb7e5483eeb5416cd27cc4c/a9925/photo-34606004425_223f1c6e87_o.webp 256w\", \"/static/5de8d2aa7fb7e5483eeb5416cd27cc4c/5406f/photo-34606004425_223f1c6e87_o.webp 512w\", \"/static/5de8d2aa7fb7e5483eeb5416cd27cc4c/ae385/photo-34606004425_223f1c6e87_o.webp 1024w\", \"/static/5de8d2aa7fb7e5483eeb5416cd27cc4c/2cd02/photo-34606004425_223f1c6e87_o.webp 1500w\"],\n    \"sizes\": \"(max-width: 1024px) 100vw, 1024px\",\n    \"type\": \"image/webp\"\n  })), \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/5de8d2aa7fb7e5483eeb5416cd27cc4c/68367/photo-34606004425_223f1c6e87_o.jpg 256w\", \"/static/5de8d2aa7fb7e5483eeb5416cd27cc4c/d763f/photo-34606004425_223f1c6e87_o.jpg 512w\", \"/static/5de8d2aa7fb7e5483eeb5416cd27cc4c/4c7b4/photo-34606004425_223f1c6e87_o.jpg 1024w\", \"/static/5de8d2aa7fb7e5483eeb5416cd27cc4c/56304/photo-34606004425_223f1c6e87_o.jpg 1500w\"],\n    \"sizes\": \"(max-width: 1024px) 100vw, 1024px\",\n    \"type\": \"image/jpeg\"\n  })), \"\\n        \", mdx(\"img\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"className\": \"gatsby-resp-image-image\",\n    \"style\": {\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"margin\": \"0\",\n      \"verticalAlign\": \"middle\",\n      \"position\": \"absolute\",\n      \"top\": \"0\",\n      \"left\": \"0\",\n      \"boxShadow\": \"inset 0px 0px 0px 400px white\"\n    },\n    \"src\": \"/static/5de8d2aa7fb7e5483eeb5416cd27cc4c/4c7b4/photo-34606004425_223f1c6e87_o.jpg\",\n    \"alt\": \"Shenzhen, China\",\n    \"title\": \"\"\n  })), \"\\n      \"), \"\\n  \")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#generate-certificates-and-nginx-configuration\"\n  }), \"Generate Certificates and NGINX Configuration\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#create-a-https-nginx-application-running-in-a-kubernetes-cluster\"\n  }), \"Create a https NGINX Application running in a Kubernetes Cluster\"))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Tutorial based on the official \", mdx(\"a\", _extends({\n    parentName: \"strong\"\n  }, {\n    \"href\": \"https://github.com/mpolinowski/examples/tree/master/staging/https-nginx\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"Kubernetes Staging Examples\"))), mdx(\"p\", null, \"Create a nginx web proxy as end-to-end https service in kubernetes. It uses an nginx server block to serve the index page over both http and https. It will detect changes to nginx's configuration file, default.conf, mounted as a configmap volume and reload nginx automatically.\"), mdx(\"h2\", {\n    \"id\": \"generate-certificates-and-nginx-configuration\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#generate-certificates-and-nginx-configuration\",\n    \"aria-label\": \"generate certificates and nginx configuration permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Generate Certificates and NGINX Configuration\"), mdx(\"p\", null, \"First generate a self signed rsa key and certificate that the server can use for TLS:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"mkdir ./nginx\\nsudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout ./nginx/nginx.key -out ./nginx/nginx.crt\\n\")), mdx(\"p\", null, \"Fill out the certificate form - you can use your servers domain name, it's WAN IP or local IP address as \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Common Name\"), \". This will be the address that the certificate is valid for.\"), mdx(\"p\", null, mdx(\"span\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"gatsby-resp-image-wrapper\",\n    \"style\": {\n      \"position\": \"relative\",\n      \"display\": \"block\",\n      \"marginLeft\": \"auto\",\n      \"marginRight\": \"auto\",\n      \"maxWidth\": \"803px\"\n    }\n  }), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-resp-image-background-image\",\n    \"style\": {\n      \"paddingBottom\": \"42.092154420921545%\",\n      \"position\": \"relative\",\n      \"bottom\": \"0\",\n      \"left\": \"0\",\n      \"backgroundSize\": \"cover\",\n      \"display\": \"block\"\n    }\n  })), \"\\n    \", mdx(\"picture\", {\n    parentName: \"span\"\n  }, \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/a41553afb71dc46c5d6439d252b26953/a9925/kubernetes-nginx_01.webp 256w\", \"/static/a41553afb71dc46c5d6439d252b26953/5406f/kubernetes-nginx_01.webp 512w\", \"/static/a41553afb71dc46c5d6439d252b26953/179fb/kubernetes-nginx_01.webp 803w\"],\n    \"sizes\": \"(max-width: 803px) 100vw, 803px\",\n    \"type\": \"image/webp\"\n  })), \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/a41553afb71dc46c5d6439d252b26953/2c438/kubernetes-nginx_01.png 256w\", \"/static/a41553afb71dc46c5d6439d252b26953/53eb4/kubernetes-nginx_01.png 512w\", \"/static/a41553afb71dc46c5d6439d252b26953/6941e/kubernetes-nginx_01.png 803w\"],\n    \"sizes\": \"(max-width: 803px) 100vw, 803px\",\n    \"type\": \"image/png\"\n  })), \"\\n        \", mdx(\"img\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"className\": \"gatsby-resp-image-image\",\n    \"style\": {\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"margin\": \"0\",\n      \"verticalAlign\": \"middle\",\n      \"position\": \"absolute\",\n      \"top\": \"0\",\n      \"left\": \"0\",\n      \"boxShadow\": \"inset 0px 0px 0px 400px white\"\n    },\n    \"src\": \"/static/a41553afb71dc46c5d6439d252b26953/6941e/kubernetes-nginx_01.png\",\n    \"alt\": \"NGINX Webproxy for your Kubernetes Cluster\",\n    \"title\": \"\"\n  })), \"\\n      \"), \"\\n  \")), mdx(\"p\", null, \"Then create your NGINX server configuration file - we are going to use this default file:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"server {\\n    listen 80 default_server;\\n    listen [::]:80 default_server ipv6only=on;\\n\\n    listen 443 ssl;\\n\\n    root /usr/share/nginx/html;\\n    index index.html;\\n\\n    server_name localhost;\\n    ssl_certificate /etc/nginx/ssl/tls.crt;\\n    ssl_certificate_key /etc/nginx/ssl/tls.key;\\n\\n    location / {\\n            try_files $uri $uri/ =404;\\n    }\\n}\\n\")), mdx(\"p\", null, mdx(\"span\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"gatsby-resp-image-wrapper\",\n    \"style\": {\n      \"position\": \"relative\",\n      \"display\": \"block\",\n      \"marginLeft\": \"auto\",\n      \"marginRight\": \"auto\",\n      \"maxWidth\": \"805px\"\n    }\n  }), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-resp-image-background-image\",\n    \"style\": {\n      \"paddingBottom\": \"35.15527950310559%\",\n      \"position\": \"relative\",\n      \"bottom\": \"0\",\n      \"left\": \"0\",\n      \"backgroundSize\": \"cover\",\n      \"display\": \"block\"\n    }\n  })), \"\\n    \", mdx(\"picture\", {\n    parentName: \"span\"\n  }, \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/9ffc6bc34ede9fd47506d3ee069a0270/a9925/kubernetes-nginx_02.webp 256w\", \"/static/9ffc6bc34ede9fd47506d3ee069a0270/5406f/kubernetes-nginx_02.webp 512w\", \"/static/9ffc6bc34ede9fd47506d3ee069a0270/688d4/kubernetes-nginx_02.webp 805w\"],\n    \"sizes\": \"(max-width: 805px) 100vw, 805px\",\n    \"type\": \"image/webp\"\n  })), \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/9ffc6bc34ede9fd47506d3ee069a0270/2c438/kubernetes-nginx_02.png 256w\", \"/static/9ffc6bc34ede9fd47506d3ee069a0270/53eb4/kubernetes-nginx_02.png 512w\", \"/static/9ffc6bc34ede9fd47506d3ee069a0270/b98f1/kubernetes-nginx_02.png 805w\"],\n    \"sizes\": \"(max-width: 805px) 100vw, 805px\",\n    \"type\": \"image/png\"\n  })), \"\\n        \", mdx(\"img\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"className\": \"gatsby-resp-image-image\",\n    \"style\": {\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"margin\": \"0\",\n      \"verticalAlign\": \"middle\",\n      \"position\": \"absolute\",\n      \"top\": \"0\",\n      \"left\": \"0\",\n      \"boxShadow\": \"inset 0px 0px 0px 400px white\"\n    },\n    \"src\": \"/static/9ffc6bc34ede9fd47506d3ee069a0270/b98f1/kubernetes-nginx_02.png\",\n    \"alt\": \"NGINX Webproxy for your Kubernetes Cluster\",\n    \"title\": \"\"\n  })), \"\\n      \"), \"\\n  \")), mdx(\"h2\", {\n    \"id\": \"create-a-https-nginx-application-running-in-a-kubernetes-cluster\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#create-a-https-nginx-application-running-in-a-kubernetes-cluster\",\n    \"aria-label\": \"create a https nginx application running in a kubernetes cluster permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Create a https NGINX Application running in a Kubernetes Cluster\"), mdx(\"p\", null, \"The first thing we\\u2019ll do is define our endpoint by creating a ConfigMap that stores our Nginx configuration as well as creating a secret from the SSL certs we just created:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"kubectl create secret tls nginxsecret --key ~/nginx/nginx.key --cert ~/nginx/nginx.crt\\nkubectl create configmap nginxconfigmap --from-file=default.conf\\n\")), mdx(\"p\", null, mdx(\"span\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"gatsby-resp-image-wrapper\",\n    \"style\": {\n      \"position\": \"relative\",\n      \"display\": \"block\",\n      \"marginLeft\": \"auto\",\n      \"marginRight\": \"auto\",\n      \"maxWidth\": \"803px\"\n    }\n  }), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-resp-image-background-image\",\n    \"style\": {\n      \"paddingBottom\": \"10.95890410958904%\",\n      \"position\": \"relative\",\n      \"bottom\": \"0\",\n      \"left\": \"0\",\n      \"backgroundSize\": \"cover\",\n      \"display\": \"block\"\n    }\n  })), \"\\n    \", mdx(\"picture\", {\n    parentName: \"span\"\n  }, \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/f8af6fd01f4f572e21510f595ed6073d/a9925/kubernetes-nginx_03.webp 256w\", \"/static/f8af6fd01f4f572e21510f595ed6073d/5406f/kubernetes-nginx_03.webp 512w\", \"/static/f8af6fd01f4f572e21510f595ed6073d/179fb/kubernetes-nginx_03.webp 803w\"],\n    \"sizes\": \"(max-width: 803px) 100vw, 803px\",\n    \"type\": \"image/webp\"\n  })), \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/f8af6fd01f4f572e21510f595ed6073d/2c438/kubernetes-nginx_03.png 256w\", \"/static/f8af6fd01f4f572e21510f595ed6073d/53eb4/kubernetes-nginx_03.png 512w\", \"/static/f8af6fd01f4f572e21510f595ed6073d/6941e/kubernetes-nginx_03.png 803w\"],\n    \"sizes\": \"(max-width: 803px) 100vw, 803px\",\n    \"type\": \"image/png\"\n  })), \"\\n        \", mdx(\"img\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"className\": \"gatsby-resp-image-image\",\n    \"style\": {\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"margin\": \"0\",\n      \"verticalAlign\": \"middle\",\n      \"position\": \"absolute\",\n      \"top\": \"0\",\n      \"left\": \"0\",\n      \"boxShadow\": \"inset 0px 0px 0px 400px white\"\n    },\n    \"src\": \"/static/f8af6fd01f4f572e21510f595ed6073d/6941e/kubernetes-nginx_03.png\",\n    \"alt\": \"NGINX Webproxy for your Kubernetes Cluster\",\n    \"title\": \"\"\n  })), \"\\n      \"), \"\\n  \")), mdx(\"p\", null, \"Create a Dockerfile for the NGINX container:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-Dockerfile\"\n  }), \"FROM nginx\\n\\n\\nCOPY index2.html /usr/share/nginx/html/index2.html\\nRUN chmod +r /usr/share/nginx/html/index2.html\\nCOPY auto-reload-nginx.sh /home/auto-reload-nginx.sh\\nRUN chmod +x /home/auto-reload-nginx.sh\\n\\n# install inotify\\nRUN apt-get update && apt-get install -y inotify-tools\\n\")), mdx(\"p\", null, \"This file relies on \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"two supporting files\"), \":\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The HTML page that we want to host:\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\"\n  }), \"<!DOCTYPE html>\\n<html>\\n<head>\\n<title>Nginx reloaded!</title>\\n<style>\\n    body {\\n        width: 35em;\\n        margin: 0 auto;\\n        font-family: Tahoma, Verdana, Arial, sans-serif;\\n    }\\n</style>\\n</head>\\n<body>\\n<h1>Nginx has been reloaded!</h1>\\n<p>If you see this page, the nginx web server has been automatically reloaded, since the config file has been updated using <a href=\\\"https://github.com/kubernetes/kubernetes\\\">Kubernetes</a>.</p>\\n\\n\\n<p>For online documentation and support please refer to\\n<a href=\\\"http://kubernetes.io/\\\">kubernetes.io</a>.<br/></p>\\n\\n<p>For online documentation and support please refer to\\n<a href=\\\"http://nginx.org/\\\">nginx.org</a>.<br/>\\nCommercial support is available at\\n<a href=\\\"http://nginx.com/\\\">nginx.com</a>.</p>\\n\\n<p><em>Thank you for using nginx.</em></p>\\n</body>\\n</html>\\n\")), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"And the \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/mpolinowski/examples/blob/master/staging/https-nginx/auto-reload-nginx.sh\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"shell script\"), \" that we need to automatically reload NGINX whenever the configuration file is changed:\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"nginx \\\"$@\\\"\\noldcksum=`cksum /etc/nginx/conf.d/default.conf`\\n\\ninotifywait -e modify,move,create,delete -mr --timefmt '%d/%m/%y %H:%M' --format '%T' \\\\\\n/etc/nginx/conf.d/ | while read date time; do\\n\\n    newcksum=`cksum /etc/nginx/conf.d/default.conf`\\n    if [ \\\"$newcksum\\\" != \\\"$oldcksum\\\" ]; then\\n        echo \\\"At ${time} on ${date}, config file update detected.\\\"\\n        oldcksum=$newcksum\\n        nginx -s reload\\n    fi\\n\\ndone\\n\")), mdx(\"p\", null, \"Then create a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Service\"), \" and a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Replication Controller\"), \" using the configuration in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nginx-app.yaml\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"apiVersion: v1\\nkind: Service\\nmetadata:\\n  name: nginx\\n  labels:\\n    app: nginx\\nspec:\\n  type: NodePort\\n  ports:\\n  - port: 80\\n    protocol: TCP\\n    name: http\\n  - port: 443\\n    protocol: TCP\\n    name: https\\n  selector:\\n    app: nginx\\n\\n\\n---\\napiVersion: v1\\nkind: ReplicationController\\nmetadata:\\n  name: nginx\\nspec:\\n  replicas: 1\\n  template:\\n    metadata:\\n      labels:\\n        app: nginx\\n    spec:\\n      volumes:\\n      - name: secret-volume\\n        secret:\\n          secretName: nginxsecret\\n      - name: configmap-volume\\n        configMap:\\n          name: nginxconfigmap\\n      containers:\\n      - name: nginxhttps\\n        image: ymqytw/nginxhttps:1.5\\n        command: [\\\"/home/auto-reload-nginx.sh\\\"]\\n        ports:\\n        - containerPort: 443\\n        - containerPort: 80\\n        livenessProbe:\\n          httpGet:\\n            path: /index.html\\n            port: 80\\n          initialDelaySeconds: 30\\n          timeoutSeconds: 1\\n        volumeMounts:\\n        - mountPath: /etc/nginx/ssl\\n          name: secret-volume\\n        - mountPath: /etc/nginx/conf.d\\n          name: configmap-volume\\n\")), mdx(\"p\", null, \"By running the following Kubernetes command:\"), mdx(\"p\", null, mdx(\"span\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"gatsby-resp-image-wrapper\",\n    \"style\": {\n      \"position\": \"relative\",\n      \"display\": \"block\",\n      \"marginLeft\": \"auto\",\n      \"marginRight\": \"auto\",\n      \"maxWidth\": \"800px\"\n    }\n  }), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-resp-image-background-image\",\n    \"style\": {\n      \"paddingBottom\": \"9%\",\n      \"position\": \"relative\",\n      \"bottom\": \"0\",\n      \"left\": \"0\",\n      \"backgroundSize\": \"cover\",\n      \"display\": \"block\"\n    }\n  })), \"\\n    \", mdx(\"picture\", {\n    parentName: \"span\"\n  }, \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/e6c332a0c1bd006079b6694fe59aa5dd/a9925/kubernetes-nginx_04.webp 256w\", \"/static/e6c332a0c1bd006079b6694fe59aa5dd/5406f/kubernetes-nginx_04.webp 512w\", \"/static/e6c332a0c1bd006079b6694fe59aa5dd/32a6f/kubernetes-nginx_04.webp 800w\"],\n    \"sizes\": \"(max-width: 800px) 100vw, 800px\",\n    \"type\": \"image/webp\"\n  })), \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/e6c332a0c1bd006079b6694fe59aa5dd/2c438/kubernetes-nginx_04.png 256w\", \"/static/e6c332a0c1bd006079b6694fe59aa5dd/53eb4/kubernetes-nginx_04.png 512w\", \"/static/e6c332a0c1bd006079b6694fe59aa5dd/04ff3/kubernetes-nginx_04.png 800w\"],\n    \"sizes\": \"(max-width: 800px) 100vw, 800px\",\n    \"type\": \"image/png\"\n  })), \"\\n        \", mdx(\"img\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"className\": \"gatsby-resp-image-image\",\n    \"style\": {\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"margin\": \"0\",\n      \"verticalAlign\": \"middle\",\n      \"position\": \"absolute\",\n      \"top\": \"0\",\n      \"left\": \"0\",\n      \"boxShadow\": \"inset 0px 0px 0px 400px white\"\n    },\n    \"src\": \"/static/e6c332a0c1bd006079b6694fe59aa5dd/04ff3/kubernetes-nginx_04.png\",\n    \"alt\": \"NGINX Webproxy for your Kubernetes Cluster\",\n    \"title\": \"\"\n  })), \"\\n      \"), \"\\n  \")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"kubectl create -f nginx-app.yaml\\n\")), mdx(\"p\", null, \"Then, find the node port that Kubernetes is using for http and https traffic.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"kubectl get service nginxsvc -o json\\n\")), mdx(\"p\", null, mdx(\"span\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"gatsby-resp-image-wrapper\",\n    \"style\": {\n      \"position\": \"relative\",\n      \"display\": \"block\",\n      \"marginLeft\": \"auto\",\n      \"marginRight\": \"auto\",\n      \"maxWidth\": \"805px\"\n    }\n  }), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-resp-image-background-image\",\n    \"style\": {\n      \"paddingBottom\": \"79.00621118012423%\",\n      \"position\": \"relative\",\n      \"bottom\": \"0\",\n      \"left\": \"0\",\n      \"backgroundSize\": \"cover\",\n      \"display\": \"block\"\n    }\n  })), \"\\n    \", mdx(\"picture\", {\n    parentName: \"span\"\n  }, \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/c47675e6aa13e8d4371123984aa60561/a9925/kubernetes-nginx_05.webp 256w\", \"/static/c47675e6aa13e8d4371123984aa60561/5406f/kubernetes-nginx_05.webp 512w\", \"/static/c47675e6aa13e8d4371123984aa60561/688d4/kubernetes-nginx_05.webp 805w\"],\n    \"sizes\": \"(max-width: 805px) 100vw, 805px\",\n    \"type\": \"image/webp\"\n  })), \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/c47675e6aa13e8d4371123984aa60561/2c438/kubernetes-nginx_05.png 256w\", \"/static/c47675e6aa13e8d4371123984aa60561/53eb4/kubernetes-nginx_05.png 512w\", \"/static/c47675e6aa13e8d4371123984aa60561/b98f1/kubernetes-nginx_05.png 805w\"],\n    \"sizes\": \"(max-width: 805px) 100vw, 805px\",\n    \"type\": \"image/png\"\n  })), \"\\n        \", mdx(\"img\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"className\": \"gatsby-resp-image-image\",\n    \"style\": {\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"margin\": \"0\",\n      \"verticalAlign\": \"middle\",\n      \"position\": \"absolute\",\n      \"top\": \"0\",\n      \"left\": \"0\",\n      \"boxShadow\": \"inset 0px 0px 0px 400px white\"\n    },\n    \"src\": \"/static/c47675e6aa13e8d4371123984aa60561/b98f1/kubernetes-nginx_05.png\",\n    \"alt\": \"NGINX Webproxy for your Kubernetes Cluster\",\n    \"title\": \"\"\n  })), \"\\n      \"), \"\\n  \")), mdx(\"p\", null, \"You can test that the service is up and running by accessing your external cluster IP address followed by the port from above:\"), mdx(\"p\", null, mdx(\"span\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"gatsby-resp-image-wrapper\",\n    \"style\": {\n      \"position\": \"relative\",\n      \"display\": \"block\",\n      \"marginLeft\": \"auto\",\n      \"marginRight\": \"auto\",\n      \"maxWidth\": \"801px\"\n    }\n  }), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-resp-image-background-image\",\n    \"style\": {\n      \"paddingBottom\": \"53.93258426966292%\",\n      \"position\": \"relative\",\n      \"bottom\": \"0\",\n      \"left\": \"0\",\n      \"backgroundSize\": \"cover\",\n      \"display\": \"block\"\n    }\n  })), \"\\n    \", mdx(\"picture\", {\n    parentName: \"span\"\n  }, \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/06420d0067768dde2a46b8eb005c9863/a9925/kubernetes-nginx_06.webp 256w\", \"/static/06420d0067768dde2a46b8eb005c9863/5406f/kubernetes-nginx_06.webp 512w\", \"/static/06420d0067768dde2a46b8eb005c9863/17193/kubernetes-nginx_06.webp 801w\"],\n    \"sizes\": \"(max-width: 801px) 100vw, 801px\",\n    \"type\": \"image/webp\"\n  })), \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/06420d0067768dde2a46b8eb005c9863/2c438/kubernetes-nginx_06.png 256w\", \"/static/06420d0067768dde2a46b8eb005c9863/53eb4/kubernetes-nginx_06.png 512w\", \"/static/06420d0067768dde2a46b8eb005c9863/eeda0/kubernetes-nginx_06.png 801w\"],\n    \"sizes\": \"(max-width: 801px) 100vw, 801px\",\n    \"type\": \"image/png\"\n  })), \"\\n        \", mdx(\"img\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"className\": \"gatsby-resp-image-image\",\n    \"style\": {\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"margin\": \"0\",\n      \"verticalAlign\": \"middle\",\n      \"position\": \"absolute\",\n      \"top\": \"0\",\n      \"left\": \"0\",\n      \"boxShadow\": \"inset 0px 0px 0px 400px white\"\n    },\n    \"src\": \"/static/06420d0067768dde2a46b8eb005c9863/eeda0/kubernetes-nginx_06.png\",\n    \"alt\": \"NGINX Webproxy for your Kubernetes Cluster\",\n    \"title\": \"\"\n  })), \"\\n      \"), \"\\n  \")), mdx(\"p\", null, \"If everything worked, you will see the default NGINX start page after accepting the self-signed certificate above:\"), mdx(\"p\", null, mdx(\"span\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"gatsby-resp-image-wrapper\",\n    \"style\": {\n      \"position\": \"relative\",\n      \"display\": \"block\",\n      \"marginLeft\": \"auto\",\n      \"marginRight\": \"auto\",\n      \"maxWidth\": \"800px\"\n    }\n  }), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-resp-image-background-image\",\n    \"style\": {\n      \"paddingBottom\": \"37.5%\",\n      \"position\": \"relative\",\n      \"bottom\": \"0\",\n      \"left\": \"0\",\n      \"backgroundSize\": \"cover\",\n      \"display\": \"block\"\n    }\n  })), \"\\n    \", mdx(\"picture\", {\n    parentName: \"span\"\n  }, \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/d87dd3a9872f9c404dbe11eebd4297e3/a9925/kubernetes-nginx_07.webp 256w\", \"/static/d87dd3a9872f9c404dbe11eebd4297e3/5406f/kubernetes-nginx_07.webp 512w\", \"/static/d87dd3a9872f9c404dbe11eebd4297e3/32a6f/kubernetes-nginx_07.webp 800w\"],\n    \"sizes\": \"(max-width: 800px) 100vw, 800px\",\n    \"type\": \"image/webp\"\n  })), \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/d87dd3a9872f9c404dbe11eebd4297e3/2c438/kubernetes-nginx_07.png 256w\", \"/static/d87dd3a9872f9c404dbe11eebd4297e3/53eb4/kubernetes-nginx_07.png 512w\", \"/static/d87dd3a9872f9c404dbe11eebd4297e3/04ff3/kubernetes-nginx_07.png 800w\"],\n    \"sizes\": \"(max-width: 800px) 100vw, 800px\",\n    \"type\": \"image/png\"\n  })), \"\\n        \", mdx(\"img\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"className\": \"gatsby-resp-image-image\",\n    \"style\": {\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"margin\": \"0\",\n      \"verticalAlign\": \"middle\",\n      \"position\": \"absolute\",\n      \"top\": \"0\",\n      \"left\": \"0\",\n      \"boxShadow\": \"inset 0px 0px 0px 400px white\"\n    },\n    \"src\": \"/static/d87dd3a9872f9c404dbe11eebd4297e3/04ff3/kubernetes-nginx_07.png\",\n    \"alt\": \"NGINX Webproxy for your Kubernetes Cluster\",\n    \"title\": \"\"\n  })), \"\\n      \"), \"\\n  \")), mdx(\"p\", null, \"Then we will update the configmap by changing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"index.html\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"index2.html\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"kubectl create configmap nginxconfigmap --from-file=default.conf -o yaml --dry-run\\\\\\n| sed 's/index.html/index2.html/g' | kubectl apply -f -\\n\")), mdx(\"p\", null, \"Wait a few seconds to let the change propagate and verify that Nginx has been reloaded with new configuration.\"), mdx(\"p\", null, mdx(\"span\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"gatsby-resp-image-wrapper\",\n    \"style\": {\n      \"position\": \"relative\",\n      \"display\": \"block\",\n      \"marginLeft\": \"auto\",\n      \"marginRight\": \"auto\",\n      \"maxWidth\": \"799px\"\n    }\n  }), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-resp-image-background-image\",\n    \"style\": {\n      \"paddingBottom\": \"41.42678347934918%\",\n      \"position\": \"relative\",\n      \"bottom\": \"0\",\n      \"left\": \"0\",\n      \"backgroundSize\": \"cover\",\n      \"display\": \"block\"\n    }\n  })), \"\\n    \", mdx(\"picture\", {\n    parentName: \"span\"\n  }, \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/35fe9c4f22d37c792e1ab0d105b89b90/a9925/kubernetes-nginx_08.webp 256w\", \"/static/35fe9c4f22d37c792e1ab0d105b89b90/5406f/kubernetes-nginx_08.webp 512w\", \"/static/35fe9c4f22d37c792e1ab0d105b89b90/22048/kubernetes-nginx_08.webp 799w\"],\n    \"sizes\": \"(max-width: 799px) 100vw, 799px\",\n    \"type\": \"image/webp\"\n  })), \"\\n        \", mdx(\"source\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"srcSet\": [\"/static/35fe9c4f22d37c792e1ab0d105b89b90/2c438/kubernetes-nginx_08.png 256w\", \"/static/35fe9c4f22d37c792e1ab0d105b89b90/53eb4/kubernetes-nginx_08.png 512w\", \"/static/35fe9c4f22d37c792e1ab0d105b89b90/42ee4/kubernetes-nginx_08.png 799w\"],\n    \"sizes\": \"(max-width: 799px) 100vw, 799px\",\n    \"type\": \"image/png\"\n  })), \"\\n        \", mdx(\"img\", _extends({\n    parentName: \"picture\"\n  }, {\n    \"className\": \"gatsby-resp-image-image\",\n    \"style\": {\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"margin\": \"0\",\n      \"verticalAlign\": \"middle\",\n      \"position\": \"absolute\",\n      \"top\": \"0\",\n      \"left\": \"0\",\n      \"boxShadow\": \"inset 0px 0px 0px 400px white\"\n    },\n    \"src\": \"/static/35fe9c4f22d37c792e1ab0d105b89b90/42ee4/kubernetes-nginx_08.png\",\n    \"alt\": \"NGINX Webproxy for your Kubernetes Cluster\",\n    \"title\": \"\"\n  })), \"\\n      \"), \"\\n  \")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Generate Certificates and NGINX Configuration Create a https NGINX Application running in a Kubernetes Cluster Tutorial based on the…","frontmatter":{"title":"Kubernetes NGINX https Service","date":"01/21/2019","categories":["LINUX","Docker","Kubernetes","NGINX"]},"timeToRead":1,"parent":{"__typename":"File","mtime":"2019-07-07T14:54:53.932Z","birthtime":"2019-07-07T14:17:26.649Z"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/kubernetes-nginx-https-service","prev":{"fields":{"slug":"/kubernetes-cluster-monitoring-logging"},"frontmatter":{"title":"Kubernetes Cluster Monitoring & Logging","categories":["LINUX","Docker","Kubernetes"]}},"next":{"fields":{"slug":"/kubernetes-bare-metal-ingress"},"frontmatter":{"title":"Kubernetes Bare Metal Ingress","categories":["LINUX","Docker","Kubernetes"]}}}}}